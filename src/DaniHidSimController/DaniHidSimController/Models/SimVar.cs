using System.Collections.Generic;

namespace DaniHidSimController.Models
{
    public sealed class SimVar
    {
        private static List<SimVar> _simVars = new List<SimVar>();

        public static readonly SimVar AutopilotPitchHold = new SimVar("AUTOPILOT PITCH HOLD", "Autopilot Pitch Hold", SimVarType.Bool);
        public static readonly SimVar StructAmbientWind = new SimVar("STRUCT AMBIENT WIND", "Struct Ambient Wind", SimVarType.FeetPerSecond);
        public static readonly SimVar LaunchbarPosition = new SimVar("LAUNCHBAR POSITION", "Launchbar Position", SimVarType.PercentOver100);
        public static readonly SimVar NumberOfCatapults = new SimVar("NUMBER OF CATAPULTS", "Number Of Catapults", SimVarType.Number);
        public static readonly SimVar HoldbackBarInstalled = new SimVar("HOLDBACK BAR INSTALLED", "Holdback Bar Installed", SimVarType.Bool);
        public static readonly SimVar BlastShieldPositionIndex = new SimVar("BLAST SHIELD POSITION:index", "Blast Shield Position Index", SimVarType.PercentOver100);
        public static readonly SimVar RecipEngDetonatingIndex = new SimVar("RECIP ENG DETONATING:index", "Recip Eng Detonating Index", SimVarType.Bool);
        public static readonly SimVar RecipEngCylinderHealthIndex = new SimVar("RECIP ENG CYLINDER HEALTH:index", "Recip Eng Cylinder Health Index", SimVarType.PercentOver100);
        public static readonly SimVar RecipEngNumCylinders = new SimVar("RECIP ENG NUM CYLINDERS", "Recip Eng Num Cylinders", SimVarType.Number);
        public static readonly SimVar RecipEngNumCylindersFailed = new SimVar("RECIP ENG NUM CYLINDERS FAILED", "Recip Eng Num Cylinders Failed", SimVarType.Number);
        public static readonly SimVar RecipEngAntidetonationTankValveIndex = new SimVar("RECIP ENG ANTIDETONATION TANK VALVE:index", "Recip Eng Antidetonation Tank Valve Index", SimVarType.Bool);
        public static readonly SimVar RecipEngAntidetonationTankQuantityIndex = new SimVar("RECIP ENG ANTIDETONATION TANK QUANTITY:index", "Recip Eng Antidetonation Tank Quantity Index", SimVarType.Gallons);
        public static readonly SimVar RecipEngAntidetonationTankMaxQuantityIndex = new SimVar("RECIP ENG ANTIDETONATION TANK MAX QUANTITY:index", "Recip Eng Antidetonation Tank Max Quantity Index", SimVarType.Gallons);
        public static readonly SimVar RecipEngNitrousTankValveIndex = new SimVar("RECIP ENG NITROUS TANK VALVE:index", "Recip Eng Nitrous Tank Valve Index", SimVarType.Bool);
        public static readonly SimVar RecipEngNitrousTankQuantityIndex = new SimVar("RECIP ENG NITROUS TANK QUANTITY:index", "Recip Eng Nitrous Tank Quantity Index", SimVarType.Gallons);
        public static readonly SimVar RecipEngNitrousTankMaxQuantityIndex = new SimVar("RECIP ENG NITROUS TANK MAX QUANTITY:index", "Recip Eng Nitrous Tank Max Quantity Index", SimVarType.Gallons);
        public static readonly SimVar PayloadStationObjectIndex = new SimVar("PAYLOAD STATION OBJECT:index", "Payload Station Object Index", SimVarType.String);
        public static readonly SimVar PayloadStationNumSimobjectsIndex = new SimVar("PAYLOAD STATION NUM SIMOBJECTS:index", "Payload Station Num Simobjects Index", SimVarType.Number);
        public static readonly SimVar SlingObjectAttachedIndex = new SimVar("SLING OBJECT ATTACHED:index", "Sling Object Attached Index", SimVarType.Boolperstring);
        public static readonly SimVar SlingCableBrokenIndex = new SimVar("SLING CABLE BROKEN:index", "Sling Cable Broken Index", SimVarType.Bool);
        public static readonly SimVar SlingCableExtendedLengthIndex = new SimVar("SLING CABLE EXTENDED LENGTH:index", "Sling Cable Extended Length Index", SimVarType.Feet);
        public static readonly SimVar SlingActivePayloadStationIndex = new SimVar("SLING ACTIVE PAYLOAD STATION:index", "Sling Active Payload Station Index", SimVarType.Number);
        public static readonly SimVar SlingHoistPercentDeployedIndex = new SimVar("SLING HOIST PERCENT DEPLOYED:index", "Sling Hoist Percent Deployed Index", SimVarType.PercentOver100);
        public static readonly SimVar SlingHookInPickupModeIndex = new SimVar("SLING HOOK IN PICKUP MODE:index", "Sling Hook In Pickup Mode Index", SimVarType.Bool);
        public static readonly SimVar IsAttachedToSling = new SimVar("IS ATTACHED TO SLING", "Is Attached To Sling", SimVarType.Bool);
        public static readonly SimVar AlternateStaticSourceOpen = new SimVar("ALTERNATE STATIC SOURCE OPEN", "Alternate Static Source Open", SimVarType.Bool);
        public static readonly SimVar AileronTrimPct = new SimVar("AILERON TRIM PCT", "Aileron Trim Pct", SimVarType.SimconnectDataXyz);
        public static readonly SimVar RudderTrimPct = new SimVar("RUDDER TRIM PCT", "Rudder Trim Pct", SimVarType.PercentOver100);
        public static readonly SimVar LightOnStates = new SimVar("LIGHT ON STATES", "Light On States", SimVarType.Mask);
        public static readonly SimVar LightStates = new SimVar("LIGHT STATES", "Light States", SimVarType.Mask);
        public static readonly SimVar LandingLightPbh = new SimVar("LANDING LIGHT PBH", "Landing Light Pbh", SimVarType.SimconnectDataXyz);
        public static readonly SimVar LightTaxiOn = new SimVar("LIGHT TAXI ON", "Light Taxi On", SimVarType.Bool);
        public static readonly SimVar LightStrobeOn = new SimVar("LIGHT STROBE ON", "Light Strobe On", SimVarType.Bool);
        public static readonly SimVar LightPanelOn = new SimVar("LIGHT PANEL ON", "Light Panel On", SimVarType.Bool);
        public static readonly SimVar LightRecognitionOn = new SimVar("LIGHT RECOGNITION ON", "Light Recognition On", SimVarType.Bool);
        public static readonly SimVar LightWingOn = new SimVar("LIGHT WING ON", "Light Wing On", SimVarType.Bool);
        public static readonly SimVar LightLogoOn = new SimVar("LIGHT LOGO ON", "Light Logo On", SimVarType.Bool);
        public static readonly SimVar LightCabinOn = new SimVar("LIGHT CABIN ON", "Light Cabin On", SimVarType.Bool);
        public static readonly SimVar LightHeadOn = new SimVar("LIGHT HEAD ON", "Light Head On", SimVarType.Bool);
        public static readonly SimVar LightBrakeOn = new SimVar("LIGHT BRAKE ON", "Light Brake On", SimVarType.Bool);
        public static readonly SimVar LightNavOn = new SimVar("LIGHT NAV ON", "Light Nav On", SimVarType.Bool);
        public static readonly SimVar LightBeaconOn = new SimVar("LIGHT BEACON ON", "Light Beacon On", SimVarType.Bool);
        public static readonly SimVar LightLandingOn = new SimVar("LIGHT LANDING ON", "Light Landing On", SimVarType.Bool);
        public static readonly SimVar AiDesiredSpeed = new SimVar("AI DESIRED SPEED", "Ai Desired Speed", SimVarType.Knots);
        public static readonly SimVar AiWaypointList = new SimVar("AI WAYPOINT LIST", "Ai Waypoint List", SimVarType.SimconnectDataWaypoint);
        public static readonly SimVar AiCurrentWaypoint = new SimVar("AI CURRENT WAYPOINT", "Ai Current Waypoint", SimVarType.Number);
        public static readonly SimVar AiDesiredHeading = new SimVar("AI DESIRED HEADING", "Ai Desired Heading", SimVarType.Degrees);
        public static readonly SimVar AiGroundturntime = new SimVar("AI GROUNDTURNTIME", "Ai Groundturntime", SimVarType.Seconds);
        public static readonly SimVar AiGroundcruisespeed = new SimVar("AI GROUNDCRUISESPEED", "Ai Groundcruisespeed", SimVarType.Knots);
        public static readonly SimVar AiGroundturnspeed = new SimVar("AI GROUNDTURNSPEED", "Ai Groundturnspeed", SimVarType.Knots);
        public static readonly SimVar AiTrafficIsifr = new SimVar("AI TRAFFIC ISIFR", "Ai Traffic Isifr", SimVarType.Boolean);
        public static readonly SimVar AiTrafficState = new SimVar("AI TRAFFIC STATE", "Ai Traffic State", SimVarType.String);
        public static readonly SimVar AiTrafficCurrentAirport = new SimVar("AI TRAFFIC CURRENT AIRPORT", "Ai Traffic Current Airport", SimVarType.String);
        public static readonly SimVar AiTrafficAssignedRunway = new SimVar("AI TRAFFIC ASSIGNED RUNWAY", "Ai Traffic Assigned Runway", SimVarType.String);
        public static readonly SimVar AiTrafficAssignedParking = new SimVar("AI TRAFFIC ASSIGNED PARKING", "Ai Traffic Assigned Parking", SimVarType.String);
        public static readonly SimVar AiTrafficFromairport = new SimVar("AI TRAFFIC FROMAIRPORT", "Ai Traffic Fromairport", SimVarType.String);
        public static readonly SimVar AiTrafficToairport = new SimVar("AI TRAFFIC TOAIRPORT", "Ai Traffic Toairport", SimVarType.String);
        public static readonly SimVar AiTrafficEtd = new SimVar("AI TRAFFIC ETD", "Ai Traffic Etd", SimVarType.Seconds);
        public static readonly SimVar AiTrafficEta = new SimVar("AI TRAFFIC ETA", "Ai Traffic Eta", SimVarType.Seconds);
        public static readonly SimVar DroppableObjectsTypeIndex = new SimVar("DROPPABLE OBJECTS TYPE:index", "Droppable Objects Type Index", SimVarType.String);
        public static readonly SimVar DroppableObjectsCountIndex = new SimVar("DROPPABLE OBJECTS COUNT:index", "Droppable Objects Count Index", SimVarType.Number);
        public static readonly SimVar WingFlexPctIndex = new SimVar("WING FLEX PCT:index", "Wing Flex Pct Index", SimVarType.PercentOver100);
        public static readonly SimVar ApplyHeatToSystems = new SimVar("APPLY HEAT TO SYSTEMS", "Apply Heat To Systems", SimVarType.Bool);
        public static readonly SimVar AdfLatlonaltIndex = new SimVar("ADF LATLONALT:index", "Adf Latlonalt Index", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar NavVorLatlonaltIndex = new SimVar("NAV VOR LATLONALT:index", "Nav Vor Latlonalt Index", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar NavGsLatlonaltIndex = new SimVar("NAV GS LATLONALT:index", "Nav Gs Latlonalt Index", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar NavDmeLatlonaltIndex = new SimVar("NAV DME LATLONALT:index", "Nav Dme Latlonalt Index", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar InnerMarkerLatlonalt = new SimVar("INNER MARKER LATLONALT", "Inner Marker Latlonalt", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar MiddleMarkerLatlonalt = new SimVar("MIDDLE MARKER LATLONALT", "Middle Marker Latlonalt", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar OuterMarkerLatlonalt = new SimVar("OUTER MARKER LATLONALT", "Outer Marker Latlonalt", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar StructLatlonalt = new SimVar("STRUCT LATLONALT", "Struct Latlonalt", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar StructLatlonaltpbh = new SimVar("STRUCT LATLONALTPBH", "Struct Latlonaltpbh", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar StructSurfaceRelativeVelocity = new SimVar("STRUCT SURFACE RELATIVE VELOCITY", "Struct Surface Relative Velocity", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructWorldvelocity = new SimVar("STRUCT WORLDVELOCITY", "Struct Worldvelocity", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructWorldRotationVelocity = new SimVar("STRUCT WORLD ROTATION VELOCITY", "Struct World Rotation Velocity", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructBodyVelocity = new SimVar("STRUCT BODY VELOCITY", "Struct Body Velocity", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructBodyRotationVelocity = new SimVar("STRUCT BODY ROTATION VELOCITY", "Struct Body Rotation Velocity", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructWorldAcceleration = new SimVar("STRUCT WORLD ACCELERATION", "Struct World Acceleration", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructEnginePositionIndex = new SimVar("STRUCT ENGINE POSITION:index", "Struct Engine Position Index", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructEyepointDynamicAngle = new SimVar("STRUCT EYEPOINT DYNAMIC ANGLE", "Struct Eyepoint Dynamic Angle", SimVarType.SimconnectDataXyz);
        public static readonly SimVar StructEyepointDynamicOffset = new SimVar("STRUCT EYEPOINT DYNAMIC OFFSET", "Struct Eyepoint Dynamic Offset", SimVarType.SimconnectDataXyz);
        public static readonly SimVar EyepointPosition = new SimVar("EYEPOINT POSITION", "Eyepoint Position", SimVarType.SimconnectDataXyz);
        public static readonly SimVar FlyByWireElacSwitch = new SimVar("FLY BY WIRE ELAC SWITCH", "Fly By Wire Elac Switch", SimVarType.Bool);
        public static readonly SimVar FlyByWireFacSwitch = new SimVar("FLY BY WIRE FAC SWITCH", "Fly By Wire Fac Switch", SimVarType.Bool);
        public static readonly SimVar FlyByWireSecSwitch = new SimVar("FLY BY WIRE SEC SWITCH", "Fly By Wire Sec Switch", SimVarType.Bool);
        public static readonly SimVar FlyByWireElacFailed = new SimVar("FLY BY WIRE ELAC FAILED", "Fly By Wire Elac Failed", SimVarType.Bool);
        public static readonly SimVar FlyByWireFacFailed = new SimVar("FLY BY WIRE FAC FAILED", "Fly By Wire Fac Failed", SimVarType.Bool);
        public static readonly SimVar FlyByWireSecFailed = new SimVar("FLY BY WIRE SEC FAILED", "Fly By Wire Sec Failed", SimVarType.Bool);
        public static readonly SimVar NumberOfEngines = new SimVar("NUMBER OF ENGINES", "Number Of Engines", SimVarType.Number);
        public static readonly SimVar EngineControlSelect = new SimVar("ENGINE CONTROL SELECT", "Engine Control Select", SimVarType.Mask);
        public static readonly SimVar ThrottleLowerLimit = new SimVar("THROTTLE LOWER LIMIT", "Throttle Lower Limit", SimVarType.Percent);
        public static readonly SimVar EngineType = new SimVar("ENGINE TYPE", "Engine Type", SimVarType.Enum);
        public static readonly SimVar MasterIgnitionSwitch = new SimVar("MASTER IGNITION SWITCH", "Master Ignition Switch", SimVarType.Bool);
        public static readonly SimVar GeneralEngCombustionIndex = new SimVar("GENERAL ENG COMBUSTION:index", "General Eng Combustion Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngMasterAlternatorIndex = new SimVar("GENERAL ENG MASTER ALTERNATOR:index", "General Eng Master Alternator Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngFuelPumpSwitchIndex = new SimVar("GENERAL ENG FUEL PUMP SWITCH:index", "General Eng Fuel Pump Switch Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngFuelPumpOnIndex = new SimVar("GENERAL ENG FUEL PUMP ON:index", "General Eng Fuel Pump On Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngRpmIndex = new SimVar("GENERAL ENG RPM:index", "General Eng Rpm Index", SimVarType.Rpm);
        public static readonly SimVar GeneralEngPctMaxRpmIndex = new SimVar("GENERAL ENG PCT MAX RPM:index", "General Eng Pct Max Rpm Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngMaxReachedRpmIndex = new SimVar("GENERAL ENG MAX REACHED RPM:index", "General Eng Max Reached Rpm Index", SimVarType.Rpm);
        public static readonly SimVar GeneralEngThrottleLeverPositionIndex = new SimVar("GENERAL ENG THROTTLE LEVER POSITION:index", "General Eng Throttle Lever Position Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngMixtureLeverPositionIndex = new SimVar("GENERAL ENG MIXTURE LEVER POSITION:index", "General Eng Mixture Lever Position Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngPropellerLeverPositionIndex = new SimVar("GENERAL ENG PROPELLER LEVER POSITION:index", "General Eng Propeller Lever Position Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngStarterIndex = new SimVar("GENERAL ENG STARTER:index", "General Eng Starter Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngExhaustGasTemperatureIndex = new SimVar("GENERAL ENG EXHAUST GAS TEMPERATURE:index", "General Eng Exhaust Gas Temperature Index", SimVarType.Rankine);
        public static readonly SimVar GeneralEngOilPressureIndex = new SimVar("GENERAL ENG OIL PRESSURE:index", "General Eng Oil Pressure Index", SimVarType.Psi);
        public static readonly SimVar GeneralEngOilLeakedPercentIndex = new SimVar("GENERAL ENG OIL LEAKED PERCENT:index", "General Eng Oil Leaked Percent Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngCombustionSoundPercentIndex = new SimVar("GENERAL ENG COMBUSTION SOUND PERCENT:index", "General Eng Combustion Sound Percent Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngDamagePercentIndex = new SimVar("GENERAL ENG DAMAGE PERCENT:index", "General Eng Damage Percent Index", SimVarType.Percent);
        public static readonly SimVar GeneralEngOilTemperatureIndex = new SimVar("GENERAL ENG OIL TEMPERATURE:index", "General Eng Oil Temperature Index", SimVarType.Rankine);
        public static readonly SimVar GeneralEngFailedIndex = new SimVar("GENERAL ENG FAILED:index", "General Eng Failed Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngGeneratorSwitchIndex = new SimVar("GENERAL ENG GENERATOR SWITCH:index", "General Eng Generator Switch Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngGeneratorActiveIndex = new SimVar("GENERAL ENG GENERATOR ACTIVE:index", "General Eng Generator Active Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngAntiIcePositionIndex = new SimVar("GENERAL ENG ANTI ICE POSITION:index", "General Eng Anti Ice Position Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngFuelValveIndex = new SimVar("GENERAL ENG FUEL VALVE:index", "General Eng Fuel Valve Index", SimVarType.Bool);
        public static readonly SimVar GeneralEngFuelPressureIndex = new SimVar("GENERAL ENG FUEL PRESSURE:index", "General Eng Fuel Pressure Index", SimVarType.Psi);
        public static readonly SimVar GeneralEngElapsedTimeIndex = new SimVar("GENERAL ENG ELAPSED TIME:index", "General Eng Elapsed Time Index", SimVarType.Hours);
        public static readonly SimVar RecipEngCowlFlapPositionIndex = new SimVar("RECIP ENG COWL FLAP POSITION:index", "Recip Eng Cowl Flap Position Index", SimVarType.Percent);
        public static readonly SimVar RecipEngPrimerIndex = new SimVar("RECIP ENG PRIMER:index", "Recip Eng Primer Index", SimVarType.Bool);
        public static readonly SimVar RecipEngManifoldPressureIndex = new SimVar("RECIP ENG MANIFOLD PRESSURE:index", "Recip Eng Manifold Pressure Index", SimVarType.Psi);
        public static readonly SimVar RecipEngAlternateAirPositionIndex = new SimVar("RECIP ENG ALTERNATE AIR POSITION:index", "Recip Eng Alternate Air Position Index", SimVarType.Position);
        public static readonly SimVar RecipEngCoolantReservoirPercentIndex = new SimVar("RECIP ENG COOLANT RESERVOIR PERCENT:index", "Recip Eng Coolant Reservoir Percent Index", SimVarType.Percent);
        public static readonly SimVar RecipEngLeftMagnetoIndex = new SimVar("RECIP ENG LEFT MAGNETO:index", "Recip Eng Left Magneto Index", SimVarType.Bool);
        public static readonly SimVar RecipEngRightMagnetoIndex = new SimVar("RECIP ENG RIGHT MAGNETO:index", "Recip Eng Right Magneto Index", SimVarType.Bool);
        public static readonly SimVar RecipEngBrakePowerIndex = new SimVar("RECIP ENG BRAKE POWER:index", "Recip Eng Brake Power Index", SimVarType.FtLbPerSecond);
        public static readonly SimVar RecipEngStarterTorqueIndex = new SimVar("RECIP ENG STARTER TORQUE:index", "Recip Eng Starter Torque Index", SimVarType.FootPound);
        public static readonly SimVar RecipEngTurbochargerFailedIndex = new SimVar("RECIP ENG TURBOCHARGER FAILED:index", "Recip Eng Turbocharger Failed Index", SimVarType.Bool);
        public static readonly SimVar RecipEngEmergencyBoostActiveIndex = new SimVar("RECIP ENG EMERGENCY BOOST ACTIVE:index", "Recip Eng Emergency Boost Active Index", SimVarType.Bool);
        public static readonly SimVar RecipEngEmergencyBoostElapsedTimeIndex = new SimVar("RECIP ENG EMERGENCY BOOST ELAPSED TIME:index", "Recip Eng Emergency Boost Elapsed Time Index", SimVarType.Hours);
        public static readonly SimVar RecipEngWastegatePositionIndex = new SimVar("RECIP ENG WASTEGATE POSITION:index", "Recip Eng Wastegate Position Index", SimVarType.Percent);
        public static readonly SimVar RecipEngTurbineInletTemperatureIndex = new SimVar("RECIP ENG TURBINE INLET TEMPERATURE:index", "Recip Eng Turbine Inlet Temperature Index", SimVarType.Celsius);
        public static readonly SimVar RecipEngCylinderHeadTemperatureIndex = new SimVar("RECIP ENG CYLINDER HEAD TEMPERATURE:index", "Recip Eng Cylinder Head Temperature Index", SimVarType.Celsius);
        public static readonly SimVar RecipEngRadiatorTemperatureIndex = new SimVar("RECIP ENG RADIATOR TEMPERATURE:index", "Recip Eng Radiator Temperature Index", SimVarType.Celsius);
        public static readonly SimVar RecipEngFuelAvailableIndex = new SimVar("RECIP ENG FUEL AVAILABLE:index", "Recip Eng Fuel Available Index", SimVarType.Bool);
        public static readonly SimVar RecipEngFuelFlowIndex = new SimVar("RECIP ENG FUEL FLOW:index", "Recip Eng Fuel Flow Index", SimVarType.PoundsPerHour);
        public static readonly SimVar RecipEngFuelTankSelectorIndex = new SimVar("RECIP ENG FUEL TANK SELECTOR:index", "Recip Eng Fuel Tank Selector Index", SimVarType.Enum);
        public static readonly SimVar RecipEngFuelTanksUsedIndex = new SimVar("RECIP ENG FUEL TANKS USED:index", "Recip Eng Fuel Tanks Used Index", SimVarType.Mask);
        public static readonly SimVar RecipEngFuelNumberTanksUsedIndex = new SimVar("RECIP ENG FUEL NUMBER TANKS USED:index", "Recip Eng Fuel Number Tanks Used Index", SimVarType.Number);
        public static readonly SimVar RecipCarburetorTemperatureIndex = new SimVar("RECIP CARBURETOR TEMPERATURE:index", "Recip Carburetor Temperature Index", SimVarType.Celsius);
        public static readonly SimVar RecipMixtureRatioIndex = new SimVar("RECIP MIXTURE RATIO:index", "Recip Mixture Ratio Index", SimVarType.Ratio);
        public static readonly SimVar TurbEngN1Index = new SimVar("TURB ENG N1:index", "Turb Eng N1 Index", SimVarType.Percent);
        public static readonly SimVar TurbEngN2Index = new SimVar("TURB ENG N2:index", "Turb Eng N2 Index", SimVarType.Percent);
        public static readonly SimVar TurbEngCorrectedN1Index = new SimVar("TURB ENG CORRECTED N1:index", "Turb Eng Corrected N1 Index", SimVarType.Percent);
        public static readonly SimVar TurbEngCorrectedN2Index = new SimVar("TURB ENG CORRECTED N2:index", "Turb Eng Corrected N2 Index", SimVarType.Percent);
        public static readonly SimVar TurbEngCorrectedFfIndex = new SimVar("TURB ENG CORRECTED FF:index", "Turb Eng Corrected Ff Index", SimVarType.PoundsPerHour);
        public static readonly SimVar TurbEngMaxTorquePercentIndex = new SimVar("TURB ENG MAX TORQUE PERCENT:index", "Turb Eng Max Torque Percent Index", SimVarType.Percent);
        public static readonly SimVar TurbEngPressureRatioIndex = new SimVar("TURB ENG PRESSURE RATIO:index", "Turb Eng Pressure Ratio Index", SimVarType.Ratio);
        public static readonly SimVar TurbEngIttIndex = new SimVar("TURB ENG ITT:index", "Turb Eng Itt Index", SimVarType.Rankine);
        public static readonly SimVar TurbEngAfterburnerIndex = new SimVar("TURB ENG AFTERBURNER:index", "Turb Eng Afterburner Index", SimVarType.Bool);
        public static readonly SimVar TurbEngJetThrustIndex = new SimVar("TURB ENG JET THRUST:index", "Turb Eng Jet Thrust Index", SimVarType.Pounds);
        public static readonly SimVar TurbEngBleedAirIndex = new SimVar("TURB ENG BLEED AIR:index", "Turb Eng Bleed Air Index", SimVarType.Psi);
        public static readonly SimVar TurbEngTankSelectorIndex = new SimVar("TURB ENG TANK SELECTOR:index", "Turb Eng Tank Selector Index", SimVarType.Enum);
        public static readonly SimVar TurbEngTanksUsedIndex = new SimVar("TURB ENG TANKS USED:index", "Turb Eng Tanks Used Index", SimVarType.Mask);
        public static readonly SimVar TurbEngNumTanksUsedIndex = new SimVar("TURB ENG NUM TANKS USED:index", "Turb Eng Num Tanks Used Index", SimVarType.Number);
        public static readonly SimVar TurbEngFuelFlowPphIndex = new SimVar("TURB ENG FUEL FLOW PPH:index", "Turb Eng Fuel Flow Pph Index", SimVarType.PoundsPerHour);
        public static readonly SimVar TurbEngFuelAvailableIndex = new SimVar("TURB ENG FUEL AVAILABLE:index", "Turb Eng Fuel Available Index", SimVarType.Bool);
        public static readonly SimVar TurbEngReverseNozzlePercentIndex = new SimVar("TURB ENG REVERSE NOZZLE PERCENT:index", "Turb Eng Reverse Nozzle Percent Index", SimVarType.Percent);
        public static readonly SimVar TurbEngVibrationIndex = new SimVar("TURB ENG VIBRATION:index", "Turb Eng Vibration Index", SimVarType.Number);
        public static readonly SimVar EngFailedIndex = new SimVar("ENG FAILED:index", "Eng Failed Index", SimVarType.Number);
        public static readonly SimVar EngRpmAnimationPercentIndex = new SimVar("ENG RPM ANIMATION PERCENT:index", "Eng Rpm Animation Percent Index", SimVarType.Percent);
        public static readonly SimVar EngOnFireIndex = new SimVar("ENG ON FIRE:index", "Eng On Fire Index", SimVarType.Bool);
        public static readonly SimVar EngFuelFlowBugPositionIndex = new SimVar("ENG FUEL FLOW BUG POSITION:index", "Eng Fuel Flow Bug Position Index", SimVarType.PoundsPerHour);
        public static readonly SimVar PropRpmIndex = new SimVar("PROP RPM:index", "Prop Rpm Index", SimVarType.Rpm);
        public static readonly SimVar PropMaxRpmPercentIndex = new SimVar("PROP MAX RPM PERCENT:index", "Prop Max Rpm Percent Index", SimVarType.Percent);
        public static readonly SimVar PropThrustIndex = new SimVar("PROP THRUST:index", "Prop Thrust Index", SimVarType.Pounds);
        public static readonly SimVar PropBetaIndex = new SimVar("PROP BETA:index", "Prop Beta Index", SimVarType.Radians);
        public static readonly SimVar PropFeatheringInhibitIndex = new SimVar("PROP FEATHERING INHIBIT:index", "Prop Feathering Inhibit Index", SimVarType.Bool);
        public static readonly SimVar PropFeatheredIndex = new SimVar("PROP FEATHERED:index", "Prop Feathered Index", SimVarType.Bool);
        public static readonly SimVar PropSyncDeltaLeverIndex = new SimVar("PROP SYNC DELTA LEVER:index", "Prop Sync Delta Lever Index", SimVarType.Position);
        public static readonly SimVar PropAutoFeatherArmedIndex = new SimVar("PROP AUTO FEATHER ARMED:index", "Prop Auto Feather Armed Index", SimVarType.Bool);
        public static readonly SimVar PropFeatherSwitchIndex = new SimVar("PROP FEATHER SWITCH:index", "Prop Feather Switch Index", SimVarType.Bool);
        public static readonly SimVar PanelAutoFeatherSwitchIndex = new SimVar("PANEL AUTO FEATHER SWITCH:index", "Panel Auto Feather Switch Index", SimVarType.Bool);
        public static readonly SimVar PropSyncActiveIndex = new SimVar("PROP SYNC ACTIVE:index", "Prop Sync Active Index", SimVarType.Bool);
        public static readonly SimVar PropDeiceSwitchIndex = new SimVar("PROP DEICE SWITCH:index", "Prop Deice Switch Index", SimVarType.Bool);
        public static readonly SimVar EngCombustion = new SimVar("ENG COMBUSTION", "Eng Combustion", SimVarType.Bool);
        public static readonly SimVar EngN1RpmIndex = new SimVar("ENG N1 RPM:index", "Eng N1 Rpm Index", SimVarType.Rpm);
        public static readonly SimVar EngN2RpmIndex = new SimVar("ENG N2 RPM:index", "Eng N2 Rpm Index", SimVarType.Rpm);
        public static readonly SimVar EngFuelFlowPphIndex = new SimVar("ENG FUEL FLOW PPH:index", "Eng Fuel Flow Pph Index", SimVarType.PoundsPerHour);
        public static readonly SimVar EngTorqueIndex = new SimVar("ENG TORQUE:index", "Eng Torque Index", SimVarType.FootPound);
        public static readonly SimVar EngAntiIceIndex = new SimVar("ENG ANTI ICE:index", "Eng Anti Ice Index", SimVarType.Bool);
        public static readonly SimVar EngPressureRatioIndex = new SimVar("ENG PRESSURE RATIO:index", "Eng Pressure Ratio Index", SimVarType.Ratio016384);
        public static readonly SimVar EngExhaustGasTemperatureIndex = new SimVar("ENG EXHAUST GAS TEMPERATURE:index", "Eng Exhaust Gas Temperature Index", SimVarType.Rankine);
        public static readonly SimVar EngExhaustGasTemperatureGesIndex = new SimVar("ENG EXHAUST GAS TEMPERATURE GES:index", "Eng Exhaust Gas Temperature Ges Index", SimVarType.PercentOver100);
        public static readonly SimVar EngCylinderHeadTemperatureIndex = new SimVar("ENG CYLINDER HEAD TEMPERATURE:index", "Eng Cylinder Head Temperature Index", SimVarType.Rankine);
        public static readonly SimVar EngOilTemperatureIndex = new SimVar("ENG OIL TEMPERATURE:index", "Eng Oil Temperature Index", SimVarType.Rankine);
        public static readonly SimVar EngOilPressureIndex = new SimVar("ENG OIL PRESSURE:index", "Eng Oil Pressure Index", SimVarType.PoundForcePerSquareInch);
        public static readonly SimVar EngOilQuantityIndex = new SimVar("ENG OIL QUANTITY:index", "Eng Oil Quantity Index", SimVarType.PercentOver100);
        public static readonly SimVar EngHydraulicPressureIndex = new SimVar("ENG HYDRAULIC PRESSURE:index", "Eng Hydraulic Pressure Index", SimVarType.PoundForcePerSquareInch);
        public static readonly SimVar EngHydraulicQuantityIndex = new SimVar("ENG HYDRAULIC QUANTITY:index", "Eng Hydraulic Quantity Index", SimVarType.PercentOver100);
        public static readonly SimVar EngManifoldPressureIndex = new SimVar("ENG MANIFOLD PRESSURE:index", "Eng Manifold Pressure Index", SimVarType.Inhg);
        public static readonly SimVar EngVibrationIndex = new SimVar("ENG VIBRATION:index", "Eng Vibration Index", SimVarType.Number);
        public static readonly SimVar EngRpmScalerIndex = new SimVar("ENG RPM SCALER:index", "Eng Rpm Scaler Index", SimVarType.Number);
        public static readonly SimVar EngTurbineTemperatureIndex = new SimVar("ENG TURBINE TEMPERATURE:index", "Eng Turbine Temperature Index", SimVarType.Celsius);
        public static readonly SimVar EngTorquePercentIndex = new SimVar("ENG TORQUE PERCENT:index", "Eng Torque Percent Index", SimVarType.Percent);
        public static readonly SimVar EngFuelPressureIndex = new SimVar("ENG FUEL PRESSURE:index", "Eng Fuel Pressure Index", SimVarType.Psi);
        public static readonly SimVar EngElectricalLoadIndex = new SimVar("ENG ELECTRICAL LOAD:index", "Eng Electrical Load Index", SimVarType.Percent);
        public static readonly SimVar EngTransmissionPressureIndex = new SimVar("ENG TRANSMISSION PRESSURE:index", "Eng Transmission Pressure Index", SimVarType.Psi);
        public static readonly SimVar EngTransmissionTemperatureIndex = new SimVar("ENG TRANSMISSION TEMPERATURE:index", "Eng Transmission Temperature Index", SimVarType.Celsius);
        public static readonly SimVar EngRotorRpmIndex = new SimVar("ENG ROTOR RPM:index", "Eng Rotor Rpm Index", SimVarType.Percent);
        public static readonly SimVar EngMaxRpm = new SimVar("ENG MAX RPM", "Eng Max Rpm", SimVarType.Rpm);
        public static readonly SimVar GeneralEngStarterActive = new SimVar("GENERAL ENG STARTER ACTIVE", "General Eng Starter Active", SimVarType.Bool);
        public static readonly SimVar GeneralEngFuelUsedSinceStart = new SimVar("GENERAL ENG FUEL USED SINCE START", "General Eng Fuel Used Since Start", SimVarType.Pounds);
        public static readonly SimVar TurbEngPrimaryNozzlePercentIndex = new SimVar("TURB ENG PRIMARY NOZZLE PERCENT:index", "Turb Eng Primary Nozzle Percent Index", SimVarType.PercentOver100);
        public static readonly SimVar TurbEngIgnitionSwitch = new SimVar("TURB ENG IGNITION SWITCH", "Turb Eng Ignition Switch", SimVarType.Bool);
        public static readonly SimVar TurbEngMasterStarterSwitch = new SimVar("TURB ENG MASTER STARTER SWITCH", "Turb Eng Master Starter Switch", SimVarType.Bool);
        public static readonly SimVar FuelTankCenterLevel = new SimVar("FUEL TANK CENTER LEVEL", "Fuel Tank Center Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankCenter2Level = new SimVar("FUEL TANK CENTER2 LEVEL", "Fuel Tank Center2 Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankCenter3Level = new SimVar("FUEL TANK CENTER3 LEVEL", "Fuel Tank Center3 Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankLeftMainLevel = new SimVar("FUEL TANK LEFT MAIN LEVEL", "Fuel Tank Left Main Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankLeftAuxLevel = new SimVar("FUEL TANK LEFT AUX LEVEL", "Fuel Tank Left Aux Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankLeftTipLevel = new SimVar("FUEL TANK LEFT TIP LEVEL", "Fuel Tank Left Tip Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankRightMainLevel = new SimVar("FUEL TANK RIGHT MAIN LEVEL", "Fuel Tank Right Main Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankRightAuxLevel = new SimVar("FUEL TANK RIGHT AUX LEVEL", "Fuel Tank Right Aux Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankRightTipLevel = new SimVar("FUEL TANK RIGHT TIP LEVEL", "Fuel Tank Right Tip Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankExternal1Level = new SimVar("FUEL TANK EXTERNAL1 LEVEL", "Fuel Tank External1 Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankExternal2Level = new SimVar("FUEL TANK EXTERNAL2 LEVEL", "Fuel Tank External2 Level", SimVarType.PercentOver100);
        public static readonly SimVar FuelTankCenterCapacity = new SimVar("FUEL TANK CENTER CAPACITY", "Fuel Tank Center Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankCenter2Capacity = new SimVar("FUEL TANK CENTER2 CAPACITY", "Fuel Tank Center2 Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankCenter3Capacity = new SimVar("FUEL TANK CENTER3 CAPACITY", "Fuel Tank Center3 Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftMainCapacity = new SimVar("FUEL TANK LEFT MAIN CAPACITY", "Fuel Tank Left Main Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftAuxCapacity = new SimVar("FUEL TANK LEFT AUX CAPACITY", "Fuel Tank Left Aux Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftTipCapacity = new SimVar("FUEL TANK LEFT TIP CAPACITY", "Fuel Tank Left Tip Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightMainCapacity = new SimVar("FUEL TANK RIGHT MAIN CAPACITY", "Fuel Tank Right Main Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightAuxCapacity = new SimVar("FUEL TANK RIGHT AUX CAPACITY", "Fuel Tank Right Aux Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightTipCapacity = new SimVar("FUEL TANK RIGHT TIP CAPACITY", "Fuel Tank Right Tip Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankExternal1Capacity = new SimVar("FUEL TANK EXTERNAL1 CAPACITY", "Fuel Tank External1 Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankExternal2Capacity = new SimVar("FUEL TANK EXTERNAL2 CAPACITY", "Fuel Tank External2 Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelLeftCapacity = new SimVar("FUEL LEFT CAPACITY", "Fuel Left Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelRightCapacity = new SimVar("FUEL RIGHT CAPACITY", "Fuel Right Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelTankCenterQuantity = new SimVar("FUEL TANK CENTER QUANTITY", "Fuel Tank Center Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankCenter2Quantity = new SimVar("FUEL TANK CENTER2 QUANTITY", "Fuel Tank Center2 Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankCenter3Quantity = new SimVar("FUEL TANK CENTER3 QUANTITY", "Fuel Tank Center3 Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftMainQuantity = new SimVar("FUEL TANK LEFT MAIN QUANTITY", "Fuel Tank Left Main Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftAuxQuantity = new SimVar("FUEL TANK LEFT AUX QUANTITY", "Fuel Tank Left Aux Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankLeftTipQuantity = new SimVar("FUEL TANK LEFT TIP QUANTITY", "Fuel Tank Left Tip Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightMainQuantity = new SimVar("FUEL TANK RIGHT MAIN QUANTITY", "Fuel Tank Right Main Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightAuxQuantity = new SimVar("FUEL TANK RIGHT AUX QUANTITY", "Fuel Tank Right Aux Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankRightTipQuantity = new SimVar("FUEL TANK RIGHT TIP QUANTITY", "Fuel Tank Right Tip Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankExternal1Quantity = new SimVar("FUEL TANK EXTERNAL1 QUANTITY", "Fuel Tank External1 Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTankExternal2Quantity = new SimVar("FUEL TANK EXTERNAL2 QUANTITY", "Fuel Tank External2 Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelLeftQuantity = new SimVar("FUEL LEFT QUANTITY", "Fuel Left Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelRightQuantity = new SimVar("FUEL RIGHT QUANTITY", "Fuel Right Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTotalQuantity = new SimVar("FUEL TOTAL QUANTITY", "Fuel Total Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelWeightPerGallon = new SimVar("FUEL WEIGHT PER GALLON", "Fuel Weight Per Gallon", SimVarType.Pounds);
        public static readonly SimVar FuelTankSelectorIndex = new SimVar("FUEL TANK SELECTOR:index", "Fuel Tank Selector Index", SimVarType.Enum);
        public static readonly SimVar FuelCrossFeed = new SimVar("FUEL CROSS FEED", "Fuel Cross Feed", SimVarType.Enum);
        public static readonly SimVar FuelTotalCapacity = new SimVar("FUEL TOTAL CAPACITY", "Fuel Total Capacity", SimVarType.Gallons);
        public static readonly SimVar FuelSelectedQuantityPercent = new SimVar("FUEL SELECTED QUANTITY PERCENT", "Fuel Selected Quantity Percent", SimVarType.PercentOver100);
        public static readonly SimVar FuelSelectedQuantity = new SimVar("FUEL SELECTED QUANTITY", "Fuel Selected Quantity", SimVarType.Gallons);
        public static readonly SimVar FuelTotalQuantityWeight = new SimVar("FUEL TOTAL QUANTITY WEIGHT", "Fuel Total Quantity Weight", SimVarType.Pounds);
        public static readonly SimVar NumFuelSelectors = new SimVar("NUM FUEL SELECTORS", "Num Fuel Selectors", SimVarType.Number);
        public static readonly SimVar UnlimitedFuel = new SimVar("UNLIMITED FUEL", "Unlimited Fuel", SimVarType.Bool);
        public static readonly SimVar EstimatedFuelFlow = new SimVar("ESTIMATED FUEL FLOW", "Estimated Fuel Flow", SimVarType.PoundsPerHour);
        public static readonly SimVar LightStrobe = new SimVar("LIGHT STROBE", "Light Strobe", SimVarType.Bool);
        public static readonly SimVar LightPanel = new SimVar("LIGHT PANEL", "Light Panel", SimVarType.Bool);
        public static readonly SimVar LightLanding = new SimVar("LIGHT LANDING", "Light Landing", SimVarType.Bool);
        public static readonly SimVar LightTaxi = new SimVar("LIGHT TAXI", "Light Taxi", SimVarType.Bool);
        public static readonly SimVar LightBeacon = new SimVar("LIGHT BEACON", "Light Beacon", SimVarType.Bool);
        public static readonly SimVar LightNav = new SimVar("LIGHT NAV", "Light Nav", SimVarType.Bool);
        public static readonly SimVar LightLogo = new SimVar("LIGHT LOGO", "Light Logo", SimVarType.Bool);
        public static readonly SimVar LightWing = new SimVar("LIGHT WING", "Light Wing", SimVarType.Bool);
        public static readonly SimVar LightRecognition = new SimVar("LIGHT RECOGNITION", "Light Recognition", SimVarType.Bool);
        public static readonly SimVar LightCabin = new SimVar("LIGHT CABIN", "Light Cabin", SimVarType.Bool);
        public static readonly SimVar GroundVelocity = new SimVar("GROUND VELOCITY", "Ground Velocity", SimVarType.Knots);
        public static readonly SimVar TotalWorldVelocity = new SimVar("TOTAL WORLD VELOCITY", "Total World Velocity", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityBodyZ = new SimVar("VELOCITY BODY Analog3", "Velocity Body Analog3", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityBodyX = new SimVar("VELOCITY BODY Analog1", "Velocity Body Analog1", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityBodyY = new SimVar("VELOCITY BODY Analog2", "Velocity Body Analog2", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityWorldZ = new SimVar("VELOCITY WORLD Analog3", "Velocity World Analog3", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityWorldX = new SimVar("VELOCITY WORLD Analog1", "Velocity World Analog1", SimVarType.FeetPerSecond);
        public static readonly SimVar VelocityWorldY = new SimVar("VELOCITY WORLD Analog2", "Velocity World Analog2", SimVarType.FeetPerSecond);
        public static readonly SimVar AccelerationWorldX = new SimVar("ACCELERATION WORLD Analog1", "Acceleration World Analog1", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar AccelerationWorldY = new SimVar("ACCELERATION WORLD Analog2", "Acceleration World Analog2", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar AccelerationWorldZ = new SimVar("ACCELERATION WORLD Analog3", "Acceleration World Analog3", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar AccelerationBodyX = new SimVar("ACCELERATION BODY Analog1", "Acceleration Body Analog1", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar AccelerationBodyY = new SimVar("ACCELERATION BODY Analog2", "Acceleration Body Analog2", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar AccelerationBodyZ = new SimVar("ACCELERATION BODY Analog3", "Acceleration Body Analog3", SimVarType.FeetPerSecondSquared);
        public static readonly SimVar RotationVelocityBodyX = new SimVar("ROTATION VELOCITY BODY Analog1", "Rotation Velocity Body Analog1", SimVarType.FeetPerSecond);
        public static readonly SimVar RotationVelocityBodyY = new SimVar("ROTATION VELOCITY BODY Analog2", "Rotation Velocity Body Analog2", SimVarType.FeetPerSecond);
        public static readonly SimVar RotationVelocityBodyZ = new SimVar("ROTATION VELOCITY BODY Analog3", "Rotation Velocity Body Analog3", SimVarType.FeetPerSecond);
        public static readonly SimVar RelativeWindVelocityBodyX = new SimVar("RELATIVE WIND VELOCITY BODY Analog1", "Relative Wind Velocity Body Analog1", SimVarType.FeetPerSecond);
        public static readonly SimVar RelativeWindVelocityBodyY = new SimVar("RELATIVE WIND VELOCITY BODY Analog2", "Relative Wind Velocity Body Analog2", SimVarType.FeetPerSecond);
        public static readonly SimVar RelativeWindVelocityBodyZ = new SimVar("RELATIVE WIND VELOCITY BODY Analog3", "Relative Wind Velocity Body Analog3", SimVarType.FeetPerSecond);
        public static readonly SimVar PlaneAltAboveGround = new SimVar("PLANE ALT ABOVE GROUND", "Plane Alt Above Ground", SimVarType.Feet);
        public static readonly SimVar PlaneLatitude = new SimVar("PLANE LATITUDE", "Plane Latitude", SimVarType.Radians);
        public static readonly SimVar PlaneLongitude = new SimVar("PLANE LONGITUDE", "Plane Longitude", SimVarType.Radians);
        public static readonly SimVar PlaneAltitude = new SimVar("PLANE ALTITUDE", "Plane Altitude", SimVarType.Feet);
        public static readonly SimVar PlanePitchDegrees = new SimVar("PLANE PITCH DEGREES", "Plane Pitch Degrees", SimVarType.Radians);
        public static readonly SimVar PlaneBankDegrees = new SimVar("PLANE BANK DEGREES", "Plane Bank Degrees", SimVarType.Radians);
        public static readonly SimVar PlaneHeadingDegreesTrue = new SimVar("PLANE HEADING DEGREES TRUE", "Plane Heading Degrees True", SimVarType.Radians);
        public static readonly SimVar PlaneHeadingDegreesMagnetic = new SimVar("PLANE HEADING DEGREES MAGNETIC", "Plane Heading Degrees Magnetic", SimVarType.Radians);
        public static readonly SimVar Magvar = new SimVar("MAGVAR", "Magvar", SimVarType.Degrees);
        public static readonly SimVar GroundAltitude = new SimVar("GROUND ALTITUDE", "Ground Altitude", SimVarType.Meters);
        public static readonly SimVar SurfaceType = new SimVar("SURFACE TYPE", "Surface Type", SimVarType.Enum);
        public static readonly SimVar SimOnGround = new SimVar("SIM ON GROUND", "Sim On Ground", SimVarType.Bool);
        public static readonly SimVar IncidenceAlpha = new SimVar("INCIDENCE ALPHA", "Incidence Alpha", SimVarType.Radians);
        public static readonly SimVar IncidenceBeta = new SimVar("INCIDENCE BETA", "Incidence Beta", SimVarType.Radians);
        public static readonly SimVar AirspeedTrue = new SimVar("AIRSPEED TRUE", "Airspeed True", SimVarType.Knots);
        public static readonly SimVar AirspeedIndicated = new SimVar("AIRSPEED INDICATED", "Airspeed Indicated", SimVarType.Knots);
        public static readonly SimVar AirspeedTrueCalibrate = new SimVar("AIRSPEED TRUE CALIBRATE", "Airspeed True Calibrate", SimVarType.Degrees);
        public static readonly SimVar AirspeedBarberPole = new SimVar("AIRSPEED BARBER POLE", "Airspeed Barber Pole", SimVarType.Knots);
        public static readonly SimVar AirspeedMach = new SimVar("AIRSPEED MACH", "Airspeed Mach", SimVarType.Mach);
        public static readonly SimVar VerticalSpeed = new SimVar("VERTICAL SPEED", "Vertical Speed", SimVarType.FeetPerSecond);
        public static readonly SimVar MachMaxOperate = new SimVar("MACH MAX OPERATE", "Mach Max Operate", SimVarType.Mach);
        public static readonly SimVar StallWarning = new SimVar("STALL WARNING", "Stall Warning", SimVarType.Bool);
        public static readonly SimVar OverspeedWarning = new SimVar("OVERSPEED WARNING", "Overspeed Warning", SimVarType.Bool);
        public static readonly SimVar BarberPoleMach = new SimVar("BARBER POLE MACH", "Barber Pole Mach", SimVarType.Mach);
        public static readonly SimVar IndicatedAltitude = new SimVar("INDICATED ALTITUDE", "Indicated Altitude", SimVarType.Feet);
        public static readonly SimVar KohlsmanSettingMb = new SimVar("KOHLSMAN SETTING MB", "Kohlsman Setting Mb", SimVarType.Millibars);
        public static readonly SimVar KohlsmanSettingHg = new SimVar("KOHLSMAN SETTING HG", "Kohlsman Setting Hg", SimVarType.Inhg);
        public static readonly SimVar AttitudeIndicatorPitchDegrees = new SimVar("ATTITUDE INDICATOR PITCH DEGREES", "Attitude Indicator Pitch Degrees", SimVarType.Radians);
        public static readonly SimVar AttitudeIndicatorBankDegrees = new SimVar("ATTITUDE INDICATOR BANK DEGREES", "Attitude Indicator Bank Degrees", SimVarType.Radians);
        public static readonly SimVar AttitudeBarsPosition = new SimVar("ATTITUDE BARS POSITION", "Attitude Bars Position", SimVarType.PercentOver100);
        public static readonly SimVar AttitudeCage = new SimVar("ATTITUDE CAGE", "Attitude Cage", SimVarType.Bool);
        public static readonly SimVar WiskeyCompassIndicationDegrees = new SimVar("WISKEY COMPASS INDICATION DEGREES", "Wiskey Compass Indication Degrees", SimVarType.Degrees);
        public static readonly SimVar PlaneHeadingDegreesGyro = new SimVar("PLANE HEADING DEGREES GYRO", "Plane Heading Degrees Gyro", SimVarType.Radians);
        public static readonly SimVar HeadingIndicator = new SimVar("HEADING INDICATOR", "Heading Indicator", SimVarType.Radians);
        public static readonly SimVar GyroDriftError = new SimVar("GYRO DRIFT ERROR", "Gyro Drift Error", SimVarType.Radians);
        public static readonly SimVar DeltaHeadingRate = new SimVar("DELTA HEADING RATE", "Delta Heading Rate", SimVarType.RadiansPerSecond);
        public static readonly SimVar TurnCoordinatorBall = new SimVar("TURN COORDINATOR BALL", "Turn Coordinator Ball", SimVarType.Position);
        public static readonly SimVar AngleOfAttackIndicator = new SimVar("ANGLE OF ATTACK INDICATOR", "Angle Of Attack Indicator", SimVarType.Radians);
        public static readonly SimVar RadioHeight = new SimVar("RADIO HEIGHT", "Radio Height", SimVarType.Feet);
        public static readonly SimVar PartialPanelAdf = new SimVar("PARTIAL PANEL ADF", "Partial Panel Adf", SimVarType.Enum);
        public static readonly SimVar PartialPanelAirspeed = new SimVar("PARTIAL PANEL AIRSPEED", "Partial Panel Airspeed", SimVarType.Enum);
        public static readonly SimVar PartialPanelAltimeter = new SimVar("PARTIAL PANEL ALTIMETER", "Partial Panel Altimeter", SimVarType.Enum);
        public static readonly SimVar PartialPanelAttitude = new SimVar("PARTIAL PANEL ATTITUDE", "Partial Panel Attitude", SimVarType.Enum);
        public static readonly SimVar PartialPanelComm = new SimVar("PARTIAL PANEL COMM", "Partial Panel Comm", SimVarType.Enum);
        public static readonly SimVar PartialPanelCompass = new SimVar("PARTIAL PANEL COMPASS", "Partial Panel Compass", SimVarType.Enum);
        public static readonly SimVar PartialPanelElectrical = new SimVar("PARTIAL PANEL ELECTRICAL", "Partial Panel Electrical", SimVarType.Enum);
        public static readonly SimVar PartialPanelAvionics = new SimVar("PARTIAL PANEL AVIONICS", "Partial Panel Avionics", SimVarType.Enum);
        public static readonly SimVar PartialPanelEngine = new SimVar("PARTIAL PANEL ENGINE", "Partial Panel Engine", SimVarType.Enum);
        public static readonly SimVar PartialPanelFuelIndicator = new SimVar("PARTIAL PANEL FUEL INDICATOR", "Partial Panel Fuel Indicator", SimVarType.Enum);
        public static readonly SimVar PartialPanelHeading = new SimVar("PARTIAL PANEL HEADING", "Partial Panel Heading", SimVarType.Enum);
        public static readonly SimVar PartialPanelVerticalVelocity = new SimVar("PARTIAL PANEL VERTICAL VELOCITY", "Partial Panel Vertical Velocity", SimVarType.Enum);
        public static readonly SimVar PartialPanelTransponder = new SimVar("PARTIAL PANEL TRANSPONDER", "Partial Panel Transponder", SimVarType.Enum);
        public static readonly SimVar PartialPanelNav = new SimVar("PARTIAL PANEL NAV", "Partial Panel Nav", SimVarType.Enum);
        public static readonly SimVar PartialPanelPitot = new SimVar("PARTIAL PANEL PITOT", "Partial Panel Pitot", SimVarType.Enum);
        public static readonly SimVar PartialPanelTurnCoordinator = new SimVar("PARTIAL PANEL TURN COORDINATOR", "Partial Panel Turn Coordinator", SimVarType.Enum);
        public static readonly SimVar PartialPanelVacuum = new SimVar("PARTIAL PANEL VACUUM", "Partial Panel Vacuum", SimVarType.Enum);
        public static readonly SimVar MaxGForce = new SimVar("MAX G FORCE", "Max G Force", SimVarType.Gforce);
        public static readonly SimVar MinGForce = new SimVar("MIN G FORCE", "Min G Force", SimVarType.Gforce);
        public static readonly SimVar SuctionPressure = new SimVar("SUCTION PRESSURE", "Suction Pressure", SimVarType.Inhg);
        public static readonly SimVar AvionicsMasterSwitch = new SimVar("AVIONICS MASTER SWITCH", "Avionics Master Switch", SimVarType.Bool);
        public static readonly SimVar NavSoundIndex = new SimVar("NAV SOUND:index", "Nav Sound Index", SimVarType.Bool);
        public static readonly SimVar DmeSound = new SimVar("DME SOUND", "Dme Sound", SimVarType.Bool);
        public static readonly SimVar AdfSoundIndex = new SimVar("ADF SOUND:index", "Adf Sound Index", SimVarType.Bool);
        public static readonly SimVar MarkerSound = new SimVar("MARKER SOUND", "Marker Sound", SimVarType.Bool);
        public static readonly SimVar ComTransmitIndex = new SimVar("COM TRANSMIT:index", "Com Transmit Index", SimVarType.Bool);
        public static readonly SimVar ComRecieveAll = new SimVar("COM RECIEVE ALL", "Com Recieve All", SimVarType.Bool);
        public static readonly SimVar ComActiveFrequencyIndex = new SimVar("COM ACTIVE FREQUENCY:index", "Com Active Frequency Index", SimVarType.FrequencyBcd16);
        public static readonly SimVar ComStandbyFrequencyIndex = new SimVar("COM STANDBY FREQUENCY:index", "Com Standby Frequency Index", SimVarType.FrequencyBcd16);
        public static readonly SimVar ComStatusIndex = new SimVar("COM STATUS:index", "Com Status Index", SimVarType.Enum);
        public static readonly SimVar NavAvailableIndex = new SimVar("NAV AVAILABLE:index", "Nav Available Index", SimVarType.Bool);
        public static readonly SimVar NavActiveFrequencyIndex = new SimVar("NAV ACTIVE FREQUENCY:index", "Nav Active Frequency Index", SimVarType.Mhz);
        public static readonly SimVar NavStandbyFrequencyIndex = new SimVar("NAV STANDBY FREQUENCY:index", "Nav Standby Frequency Index", SimVarType.Mhz);
        public static readonly SimVar NavSignalIndex = new SimVar("NAV SIGNAL:index", "Nav Signal Index", SimVarType.Number);
        public static readonly SimVar NavHasNavIndex = new SimVar("NAV HAS NAV:index", "Nav Has Nav Index", SimVarType.Bool);
        public static readonly SimVar NavHasLocalizerIndex = new SimVar("NAV HAS LOCALIZER:index", "Nav Has Localizer Index", SimVarType.Bool);
        public static readonly SimVar NavHasDmeIndex = new SimVar("NAV HAS DME:index", "Nav Has Dme Index", SimVarType.Bool);
        public static readonly SimVar NavHasGlideSlopeIndex = new SimVar("NAV HAS GLIDE SLOPE:index", "Nav Has Glide Slope Index", SimVarType.Bool);
        public static readonly SimVar NavBackCourseFlagsIndex = new SimVar("NAV BACK COURSE FLAGS:index", "Nav Back Course Flags Index", SimVarType.Bool);
        public static readonly SimVar NavMagvarIndex = new SimVar("NAV MAGVAR:index", "Nav Magvar Index", SimVarType.Degrees);
        public static readonly SimVar NavRadialIndex = new SimVar("NAV RADIAL:index", "Nav Radial Index", SimVarType.Degrees);
        public static readonly SimVar NavRadialErrorIndex = new SimVar("NAV RADIAL ERROR:index", "Nav Radial Error Index", SimVarType.Degrees);
        public static readonly SimVar NavLocalizerIndex = new SimVar("NAV LOCALIZER:index", "Nav Localizer Index", SimVarType.Degrees);
        public static readonly SimVar NavGlideSlopeErrorIndex = new SimVar("NAV GLIDE SLOPE ERROR:index", "Nav Glide Slope Error Index", SimVarType.Degrees);
        public static readonly SimVar NavCdiIndex = new SimVar("NAV CDI:index", "Nav Cdi Index", SimVarType.Number);
        public static readonly SimVar NavGsiIndex = new SimVar("NAV GSI:index", "Nav Gsi Index", SimVarType.Number);
        public static readonly SimVar NavTofromIndex = new SimVar("NAV TOFROM:index", "Nav Tofrom Index", SimVarType.Enum);
        public static readonly SimVar NavGsFlagIndex = new SimVar("NAV GS FLAG:index", "Nav Gs Flag Index", SimVarType.Bool);
        public static readonly SimVar NavObsIndex = new SimVar("NAV OBS:index", "Nav Obs Index", SimVarType.Degrees);
        public static readonly SimVar NavDmeIndex = new SimVar("NAV DME:index", "Nav Dme Index", SimVarType.NauticalMiles);
        public static readonly SimVar NavDmespeedIndex = new SimVar("NAV DMESPEED:index", "Nav Dmespeed Index", SimVarType.Knots);
        public static readonly SimVar AdfActiveFrequencyIndex = new SimVar("ADF ACTIVE FREQUENCY:index", "Adf Active Frequency Index", SimVarType.FrequencyAdfBcd32);
        public static readonly SimVar AdfStandbyFrequencyIndex = new SimVar("ADF STANDBY FREQUENCY:index", "Adf Standby Frequency Index", SimVarType.Hz);
        public static readonly SimVar AdfRadialIndex = new SimVar("ADF RADIAL:index", "Adf Radial Index", SimVarType.Degrees);
        public static readonly SimVar AdfSignalIndex = new SimVar("ADF SIGNAL:index", "Adf Signal Index", SimVarType.Number);
        public static readonly SimVar TransponderCodeIndex = new SimVar("TRANSPONDER CODE:index", "Transponder Code Index", SimVarType.Bco16);
        public static readonly SimVar MarkerBeaconState = new SimVar("MARKER BEACON STATE", "Marker Beacon State", SimVarType.Enum);
        public static readonly SimVar InnerMarker = new SimVar("INNER MARKER", "Inner Marker", SimVarType.Bool);
        public static readonly SimVar MiddleMarker = new SimVar("MIDDLE MARKER", "Middle Marker", SimVarType.Bool);
        public static readonly SimVar OuterMarker = new SimVar("OUTER MARKER", "Outer Marker", SimVarType.Bool);
        public static readonly SimVar NavRawGlideSlopeIndex = new SimVar("NAV RAW GLIDE SLOPE:index", "Nav Raw Glide Slope Index", SimVarType.Degrees);
        public static readonly SimVar AdfCard = new SimVar("ADF CARD", "Adf Card", SimVarType.Degrees);
        public static readonly SimVar HsiCdiNeedle = new SimVar("HSI CDI NEEDLE", "Hsi Cdi Needle", SimVarType.Number);
        public static readonly SimVar HsiGsiNeedle = new SimVar("HSI GSI NEEDLE", "Hsi Gsi Needle", SimVarType.Number);
        public static readonly SimVar HsiCdiNeedleValid = new SimVar("HSI CDI NEEDLE VALID", "Hsi Cdi Needle Valid", SimVarType.Bool);
        public static readonly SimVar HsiGsiNeedleValid = new SimVar("HSI GSI NEEDLE VALID", "Hsi Gsi Needle Valid", SimVarType.Bool);
        public static readonly SimVar HsiTfFlags = new SimVar("HSI TF FLAGS", "Hsi Tf Flags", SimVarType.Enum);
        public static readonly SimVar HsiBearingValid = new SimVar("HSI BEARING VALID", "Hsi Bearing Valid", SimVarType.Bool);
        public static readonly SimVar HsiBearing = new SimVar("HSI BEARING", "Hsi Bearing", SimVarType.Degrees);
        public static readonly SimVar HsiHasLocalizer = new SimVar("HSI HAS LOCALIZER", "Hsi Has Localizer", SimVarType.Bool);
        public static readonly SimVar HsiSpeed = new SimVar("HSI SPEED", "Hsi Speed", SimVarType.Knots);
        public static readonly SimVar HsiDistance = new SimVar("HSI DISTANCE", "Hsi Distance", SimVarType.NauticalMiles);
        public static readonly SimVar GpsPositionLat = new SimVar("GPS POSITION LAT", "Gps Position Lat", SimVarType.Degrees);
        public static readonly SimVar GpsPositionLon = new SimVar("GPS POSITION LON", "Gps Position Lon", SimVarType.Degrees);
        public static readonly SimVar GpsPositionAlt = new SimVar("GPS POSITION ALT", "Gps Position Alt", SimVarType.Meters);
        public static readonly SimVar GpsMagvar = new SimVar("GPS MAGVAR", "Gps Magvar", SimVarType.Radians);
        public static readonly SimVar GpsIsActiveFlightPlan = new SimVar("GPS IS ACTIVE FLIGHT PLAN", "Gps Is Active Flight Plan", SimVarType.Bool);
        public static readonly SimVar GpsIsActiveWayPoint = new SimVar("GPS IS ACTIVE WAY POINT", "Gps Is Active Way Point", SimVarType.Bool);
        public static readonly SimVar GpsIsArrived = new SimVar("GPS IS ARRIVED", "Gps Is Arrived", SimVarType.Bool);
        public static readonly SimVar GpsIsDirecttoFlightplan = new SimVar("GPS IS DIRECTTO FLIGHTPLAN", "Gps Is Directto Flightplan", SimVarType.Bool);
        public static readonly SimVar GpsGroundSpeed = new SimVar("GPS GROUND SPEED", "Gps Ground Speed", SimVarType.MetersPerSecond);
        public static readonly SimVar GpsGroundTrueHeading = new SimVar("GPS GROUND TRUE HEADING", "Gps Ground True Heading", SimVarType.Radians);
        public static readonly SimVar GpsGroundMagneticTrack = new SimVar("GPS GROUND MAGNETIC TRACK", "Gps Ground Magnetic Track", SimVarType.Radians);
        public static readonly SimVar GpsGroundTrueTrack = new SimVar("GPS GROUND TRUE TRACK", "Gps Ground True Track", SimVarType.Radians);
        public static readonly SimVar GpsWpDistance = new SimVar("GPS WP DISTANCE", "Gps Wp Distance", SimVarType.Meters);
        public static readonly SimVar GpsWpBearing = new SimVar("GPS WP BEARING", "Gps Wp Bearing", SimVarType.Radians);
        public static readonly SimVar GpsWpTrueBearing = new SimVar("GPS WP TRUE BEARING", "Gps Wp True Bearing", SimVarType.Radians);
        public static readonly SimVar GpsWpCrossTrk = new SimVar("GPS WP CROSS TRK", "Gps Wp Cross Trk", SimVarType.Meters);
        public static readonly SimVar GpsWpDesiredTrack = new SimVar("GPS WP DESIRED TRACK", "Gps Wp Desired Track", SimVarType.Radians);
        public static readonly SimVar GpsWpTrueReqHdg = new SimVar("GPS WP TRUE REQ HDG", "Gps Wp True Req Hdg", SimVarType.Radians);
        public static readonly SimVar GpsWpVerticalSpeed = new SimVar("GPS WP VERTICAL SPEED", "Gps Wp Vertical Speed", SimVarType.MetersPerSecond);
        public static readonly SimVar GpsWpTrackAngleError = new SimVar("GPS WP TRACK ANGLE ERROR", "Gps Wp Track Angle Error", SimVarType.Radians);
        public static readonly SimVar GpsEte = new SimVar("GPS ETE", "Gps Ete", SimVarType.Seconds);
        public static readonly SimVar GpsEta = new SimVar("GPS ETA", "Gps Eta", SimVarType.Seconds);
        public static readonly SimVar GpsWpNextLat = new SimVar("GPS WP NEXT LAT", "Gps Wp Next Lat", SimVarType.Degrees);
        public static readonly SimVar GpsWpNextLon = new SimVar("GPS WP NEXT LON", "Gps Wp Next Lon", SimVarType.Degrees);
        public static readonly SimVar GpsWpNextAlt = new SimVar("GPS WP NEXT ALT", "Gps Wp Next Alt", SimVarType.Meters);
        public static readonly SimVar GpsWpPrevValid = new SimVar("GPS WP PREV VALID", "Gps Wp Prev Valid", SimVarType.Bool);
        public static readonly SimVar GpsWpPrevLat = new SimVar("GPS WP PREV LAT", "Gps Wp Prev Lat", SimVarType.Degrees);
        public static readonly SimVar GpsWpPrevLon = new SimVar("GPS WP PREV LON", "Gps Wp Prev Lon", SimVarType.Degrees);
        public static readonly SimVar GpsWpPrevAlt = new SimVar("GPS WP PREV ALT", "Gps Wp Prev Alt", SimVarType.Meters);
        public static readonly SimVar GpsWpEte = new SimVar("GPS WP ETE", "Gps Wp Ete", SimVarType.Seconds);
        public static readonly SimVar GpsWpEta = new SimVar("GPS WP ETA", "Gps Wp Eta", SimVarType.Seconds);
        public static readonly SimVar GpsCourseToSteer = new SimVar("GPS COURSE TO STEER", "Gps Course To Steer", SimVarType.Radians);
        public static readonly SimVar GpsFlightPlanWpIndex = new SimVar("GPS FLIGHT PLAN WP INDEX", "Gps Flight Plan Wp Index", SimVarType.Number);
        public static readonly SimVar GpsFlightPlanWpCount = new SimVar("GPS FLIGHT PLAN WP COUNT", "Gps Flight Plan Wp Count", SimVarType.Number);
        public static readonly SimVar GpsIsActiveWpLocked = new SimVar("GPS IS ACTIVE WP LOCKED", "Gps Is Active Wp Locked", SimVarType.Bool);
        public static readonly SimVar GpsIsApproachLoaded = new SimVar("GPS IS APPROACH LOADED", "Gps Is Approach Loaded", SimVarType.Bool);
        public static readonly SimVar GpsIsApproachActive = new SimVar("GPS IS APPROACH ACTIVE", "Gps Is Approach Active", SimVarType.Bool);
        public static readonly SimVar GpsApproachMode = new SimVar("GPS APPROACH MODE", "Gps Approach Mode", SimVarType.Enum);
        public static readonly SimVar GpsApproachWpType = new SimVar("GPS APPROACH WP TYPE", "Gps Approach Wp Type", SimVarType.Enum);
        public static readonly SimVar GpsApproachIsWpRunway = new SimVar("GPS APPROACH IS WP RUNWAY", "Gps Approach Is Wp Runway", SimVarType.Bool);
        public static readonly SimVar GpsApproachSegmentType = new SimVar("GPS APPROACH SEGMENT TYPE", "Gps Approach Segment Type", SimVarType.Enum);
        public static readonly SimVar GpsApproachApproachIndex = new SimVar("GPS APPROACH APPROACH INDEX", "Gps Approach Approach Index", SimVarType.Number);
        public static readonly SimVar GpsApproachApproachType = new SimVar("GPS APPROACH APPROACH TYPE", "Gps Approach Approach Type", SimVarType.Enum);
        public static readonly SimVar GpsApproachTransitionIndex = new SimVar("GPS APPROACH TRANSITION INDEX", "Gps Approach Transition Index", SimVarType.Number);
        public static readonly SimVar GpsApproachIsFinal = new SimVar("GPS APPROACH IS FINAL", "Gps Approach Is Final", SimVarType.Bool);
        public static readonly SimVar GpsApproachIsMissed = new SimVar("GPS APPROACH IS MISSED", "Gps Approach Is Missed", SimVarType.Bool);
        public static readonly SimVar GpsApproachTimezoneDeviation = new SimVar("GPS APPROACH TIMEZONE DEVIATION", "Gps Approach Timezone Deviation", SimVarType.Seconds);
        public static readonly SimVar GpsApproachWpIndex = new SimVar("GPS APPROACH WP INDEX", "Gps Approach Wp Index", SimVarType.Number);
        public static readonly SimVar GpsApproachWpCount = new SimVar("GPS APPROACH WP COUNT", "Gps Approach Wp Count", SimVarType.Number);
        public static readonly SimVar GpsDrivesNav1 = new SimVar("GPS DRIVES NAV1", "Gps Drives Nav1", SimVarType.Bool);
        public static readonly SimVar ComReceiveAll = new SimVar("COM RECEIVE ALL", "Com Receive All", SimVarType.Bool);
        public static readonly SimVar ComAvailable = new SimVar("COM AVAILABLE", "Com Available", SimVarType.Bool);
        public static readonly SimVar ComTestIndex = new SimVar("COM TEST:index", "Com Test Index", SimVarType.Bool);
        public static readonly SimVar TransponderAvailable = new SimVar("TRANSPONDER AVAILABLE", "Transponder Available", SimVarType.Bool);
        public static readonly SimVar AdfAvailable = new SimVar("ADF AVAILABLE", "Adf Available", SimVarType.Bool);
        public static readonly SimVar AdfFrequencyIndex = new SimVar("ADF FREQUENCY:index", "Adf Frequency Index", SimVarType.FrequencyBcd16);
        public static readonly SimVar AdfExtFrequencyIndex = new SimVar("ADF EXT FREQUENCY:index", "Adf Ext Frequency Index", SimVarType.FrequencyBcd16);
        public static readonly SimVar AdfIdent = new SimVar("ADF IDENT", "Adf Ident", SimVarType.String);
        public static readonly SimVar AdfName = new SimVar("ADF NAME", "Adf Name", SimVarType.String);
        public static readonly SimVar NavIdent = new SimVar("NAV IDENT", "Nav Ident", SimVarType.String);
        public static readonly SimVar NavName = new SimVar("NAV NAME", "Nav Name", SimVarType.String);
        public static readonly SimVar NavCodesIndex = new SimVar("NAV CODES:index", "Nav Codes Index", SimVarType.Flags);
        public static readonly SimVar NavGlideSlope = new SimVar("NAV GLIDE SLOPE", "Nav Glide Slope", SimVarType.Number);
        public static readonly SimVar NavRelativeBearingToStationIndex = new SimVar("NAV RELATIVE BEARING TO STATION:index", "Nav Relative Bearing To Station Index", SimVarType.Degrees);
        public static readonly SimVar SelectedDme = new SimVar("SELECTED DME", "Selected Dme", SimVarType.Number);
        public static readonly SimVar GpsWpNextId = new SimVar("GPS WP NEXT ID", "Gps Wp Next Id", SimVarType.String);
        public static readonly SimVar GpsWpPrevId = new SimVar("GPS WP PREV ID", "Gps Wp Prev Id", SimVarType.String);
        public static readonly SimVar GpsTargetDistance = new SimVar("GPS TARGET DISTANCE", "Gps Target Distance", SimVarType.Meters);
        public static readonly SimVar GpsTargetAltitude = new SimVar("GPS TARGET ALTITUDE", "Gps Target Altitude", SimVarType.Meters);
        public static readonly SimVar YokeYPosition = new SimVar("YOKE Analog2 POSITION", "Yoke Analog2 Position", SimVarType.Position);
        public static readonly SimVar YokeXPosition = new SimVar("YOKE Analog1 POSITION", "Yoke Analog1 Position", SimVarType.Position);
        public static readonly SimVar RudderPedalPosition = new SimVar("RUDDER PEDAL POSITION", "Rudder Pedal Position", SimVarType.Position);
        public static readonly SimVar RudderPosition = new SimVar("RUDDER POSITION", "Rudder Position", SimVarType.Position);
        public static readonly SimVar ElevatorPosition = new SimVar("ELEVATOR POSITION", "Elevator Position", SimVarType.Position);
        public static readonly SimVar AileronPosition = new SimVar("AILERON POSITION", "Aileron Position", SimVarType.Position);
        public static readonly SimVar ElevatorTrimPosition = new SimVar("ELEVATOR TRIM POSITION", "Elevator Trim Position", SimVarType.Radians);
        public static readonly SimVar ElevatorTrimIndicator = new SimVar("ELEVATOR TRIM INDICATOR", "Elevator Trim Indicator", SimVarType.Position);
        public static readonly SimVar ElevatorTrimPct = new SimVar("ELEVATOR TRIM PCT", "Elevator Trim Pct", SimVarType.PercentOver100);
        public static readonly SimVar BrakeLeftPosition = new SimVar("BRAKE LEFT POSITION", "Brake Left Position", SimVarType.Position);
        public static readonly SimVar BrakeRightPosition = new SimVar("BRAKE RIGHT POSITION", "Brake Right Position", SimVarType.Position);
        public static readonly SimVar BrakeIndicator = new SimVar("BRAKE INDICATOR", "Brake Indicator", SimVarType.Position);
        public static readonly SimVar BrakeParkingPosition = new SimVar("BRAKE PARKING POSITION", "Brake Parking Position", SimVarType.Position);
        public static readonly SimVar BrakeParkingIndicator = new SimVar("BRAKE PARKING INDICATOR", "Brake Parking Indicator", SimVarType.Bool);
        public static readonly SimVar SpoilersArmed = new SimVar("SPOILERS ARMED", "Spoilers Armed", SimVarType.Bool);
        public static readonly SimVar SpoilersHandlePosition = new SimVar("SPOILERS HANDLE POSITION", "Spoilers Handle Position", SimVarType.PercentOver100);
        public static readonly SimVar SpoilersLeftPosition = new SimVar("SPOILERS LEFT POSITION", "Spoilers Left Position", SimVarType.PercentOver100);
        public static readonly SimVar SpoilersRightPosition = new SimVar("SPOILERS RIGHT POSITION", "Spoilers Right Position", SimVarType.PercentOver100);
        public static readonly SimVar FlapsHandlePercent = new SimVar("FLAPS HANDLE PERCENT", "Flaps Handle Percent", SimVarType.PercentOver100);
        public static readonly SimVar FlapsHandleIndex = new SimVar("FLAPS HANDLE INDEX", "Flaps Handle Index", SimVarType.Number);
        public static readonly SimVar FlapsNumHandlePositions = new SimVar("FLAPS NUM HANDLE POSITIONS", "Flaps Num Handle Positions", SimVarType.Number);
        public static readonly SimVar TrailingEdgeFlapsLeftPercent = new SimVar("TRAILING EDGE FLAPS LEFT PERCENT", "Trailing Edge Flaps Left Percent", SimVarType.PercentOver100);
        public static readonly SimVar TrailingEdgeFlapsRightPercent = new SimVar("TRAILING EDGE FLAPS RIGHT PERCENT", "Trailing Edge Flaps Right Percent", SimVarType.PercentOver100);
        public static readonly SimVar TrailingEdgeFlapsLeftAngle = new SimVar("TRAILING EDGE FLAPS LEFT ANGLE", "Trailing Edge Flaps Left Angle", SimVarType.Radians);
        public static readonly SimVar TrailingEdgeFlapsRightAngle = new SimVar("TRAILING EDGE FLAPS RIGHT ANGLE", "Trailing Edge Flaps Right Angle", SimVarType.Radians);
        public static readonly SimVar LeadingEdgeFlapsLeftPercent = new SimVar("LEADING EDGE FLAPS LEFT PERCENT", "Leading Edge Flaps Left Percent", SimVarType.PercentOver100);
        public static readonly SimVar LeadingEdgeFlapsRightPercent = new SimVar("LEADING EDGE FLAPS RIGHT PERCENT", "Leading Edge Flaps Right Percent", SimVarType.PercentOver100);
        public static readonly SimVar LeadingEdgeFlapsLeftAngle = new SimVar("LEADING EDGE FLAPS LEFT ANGLE", "Leading Edge Flaps Left Angle", SimVarType.Radians);
        public static readonly SimVar LeadingEdgeFlapsRightAngle = new SimVar("LEADING EDGE FLAPS RIGHT ANGLE", "Leading Edge Flaps Right Angle", SimVarType.Radians);
        public static readonly SimVar IsGearRetractable = new SimVar("IS GEAR RETRACTABLE", "Is Gear Retractable", SimVarType.Bool);
        public static readonly SimVar IsGearSkis = new SimVar("IS GEAR SKIS", "Is Gear Skis", SimVarType.Bool);
        public static readonly SimVar IsGearFloats = new SimVar("IS GEAR FLOATS", "Is Gear Floats", SimVarType.Bool);
        public static readonly SimVar IsGearSkids = new SimVar("IS GEAR SKIDS", "Is Gear Skids", SimVarType.Bool);
        public static readonly SimVar IsGearWheels = new SimVar("IS GEAR WHEELS", "Is Gear Wheels", SimVarType.Bool);
        public static readonly SimVar GearHandlePosition = new SimVar("GEAR HANDLE POSITION", "Gear Handle Position", SimVarType.Bool);
        public static readonly SimVar GearHydraulicPressure = new SimVar("GEAR HYDRAULIC PRESSURE", "Gear Hydraulic Pressure", SimVarType.Psf);
        public static readonly SimVar TailwheelLockOn = new SimVar("TAILWHEEL LOCK ON", "Tailwheel Lock On", SimVarType.Bool);
        public static readonly SimVar GearCenterPosition = new SimVar("GEAR CENTER POSITION", "Gear Center Position", SimVarType.PercentOver100);
        public static readonly SimVar GearLeftPosition = new SimVar("GEAR LEFT POSITION", "Gear Left Position", SimVarType.PercentOver100);
        public static readonly SimVar GearRightPosition = new SimVar("GEAR RIGHT POSITION", "Gear Right Position", SimVarType.PercentOver100);
        public static readonly SimVar GearTailPosition = new SimVar("GEAR TAIL POSITION", "Gear Tail Position", SimVarType.PercentOver100);
        public static readonly SimVar GearAuxPosition = new SimVar("GEAR AUX POSITION", "Gear Aux Position", SimVarType.PercentOver100);
        public static readonly SimVar GearPositionIndex = new SimVar("GEAR POSITION:index", "Gear Position Index", SimVarType.Enum);
        public static readonly SimVar GearAnimationPositionIndex = new SimVar("GEAR ANIMATION POSITION:index", "Gear Animation Position Index", SimVarType.Number);
        public static readonly SimVar GearTotalPctExtended = new SimVar("GEAR TOTAL PCT EXTENDED", "Gear Total Pct Extended", SimVarType.Percentage);
        public static readonly SimVar AutoBrakeSwitchCb = new SimVar("AUTO BRAKE SWITCH CB", "Auto Brake Switch Cb", SimVarType.Number);
        public static readonly SimVar WaterRudderHandlePosition = new SimVar("WATER RUDDER HANDLE POSITION", "Water Rudder Handle Position", SimVarType.PercentOver100);
        public static readonly SimVar ElevatorDeflection = new SimVar("ELEVATOR DEFLECTION", "Elevator Deflection", SimVarType.Radians);
        public static readonly SimVar ElevatorDeflectionPct = new SimVar("ELEVATOR DEFLECTION PCT", "Elevator Deflection Pct", SimVarType.PercentOver100);
        public static readonly SimVar WaterLeftRudderExtended = new SimVar("WATER LEFT RUDDER EXTENDED", "Water Left Rudder Extended", SimVarType.Percentage);
        public static readonly SimVar WaterRightRudderExtended = new SimVar("WATER RIGHT RUDDER EXTENDED", "Water Right Rudder Extended", SimVarType.Percentage);
        public static readonly SimVar GearCenterSteerAngle = new SimVar("GEAR CENTER STEER ANGLE", "Gear Center Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar GearLeftSteerAngle = new SimVar("GEAR LEFT STEER ANGLE", "Gear Left Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar GearRightSteerAngle = new SimVar("GEAR RIGHT STEER ANGLE", "Gear Right Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar GearAuxSteerAngle = new SimVar("GEAR AUX STEER ANGLE", "Gear Aux Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar GearSteerAngleIndex = new SimVar("GEAR STEER ANGLE:index", "Gear Steer Angle Index", SimVarType.PercentOver100);
        public static readonly SimVar WaterLeftRudderSteerAngle = new SimVar("WATER LEFT RUDDER STEER ANGLE", "Water Left Rudder Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar WaterRightRudderSteerAngle = new SimVar("WATER RIGHT RUDDER STEER ANGLE", "Water Right Rudder Steer Angle", SimVarType.PercentOver100);
        public static readonly SimVar GearCenterSteerAnglePct = new SimVar("GEAR CENTER STEER ANGLE PCT", "Gear Center Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar GearLeftSteerAnglePct = new SimVar("GEAR LEFT STEER ANGLE PCT", "Gear Left Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar GearRightSteerAnglePct = new SimVar("GEAR RIGHT STEER ANGLE PCT", "Gear Right Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar GearAuxSteerAnglePct = new SimVar("GEAR AUX STEER ANGLE PCT", "Gear Aux Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar GearSteerAnglePctIndex = new SimVar("GEAR STEER ANGLE PCT:index", "Gear Steer Angle Pct Index", SimVarType.PercentOver100);
        public static readonly SimVar WaterLeftRudderSteerAnglePct = new SimVar("WATER LEFT RUDDER STEER ANGLE PCT", "Water Left Rudder Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar WaterRightRudderSteerAnglePct = new SimVar("WATER RIGHT RUDDER STEER ANGLE PCT", "Water Right Rudder Steer Angle Pct", SimVarType.PercentOver100);
        public static readonly SimVar AileronLeftDeflection = new SimVar("AILERON LEFT DEFLECTION", "Aileron Left Deflection", SimVarType.Radians);
        public static readonly SimVar AileronLeftDeflectionPct = new SimVar("AILERON LEFT DEFLECTION PCT", "Aileron Left Deflection Pct", SimVarType.PercentOver100);
        public static readonly SimVar AileronRightDeflection = new SimVar("AILERON RIGHT DEFLECTION", "Aileron Right Deflection", SimVarType.Radians);
        public static readonly SimVar AileronRightDeflectionPct = new SimVar("AILERON RIGHT DEFLECTION PCT", "Aileron Right Deflection Pct", SimVarType.PercentOver100);
        public static readonly SimVar AileronAverageDeflection = new SimVar("AILERON AVERAGE DEFLECTION", "Aileron Average Deflection", SimVarType.Radians);
        public static readonly SimVar AileronTrim = new SimVar("AILERON TRIM", "Aileron Trim", SimVarType.Radians);
        public static readonly SimVar RudderDeflection = new SimVar("RUDDER DEFLECTION", "Rudder Deflection", SimVarType.Radians);
        public static readonly SimVar RudderDeflectionPct = new SimVar("RUDDER DEFLECTION PCT", "Rudder Deflection Pct", SimVarType.PercentOver100);
        public static readonly SimVar RudderTrim = new SimVar("RUDDER TRIM", "Rudder Trim", SimVarType.Radians);
        public static readonly SimVar FlapsAvailable = new SimVar("FLAPS AVAILABLE", "Flaps Available", SimVarType.Bool);
        public static readonly SimVar GearDamageBySpeed = new SimVar("GEAR DAMAGE BY SPEED", "Gear Damage By Speed", SimVarType.Bool);
        public static readonly SimVar GearSpeedExceeded = new SimVar("GEAR SPEED EXCEEDED", "Gear Speed Exceeded", SimVarType.Bool);
        public static readonly SimVar FlapDamageBySpeed = new SimVar("FLAP DAMAGE BY SPEED", "Flap Damage By Speed", SimVarType.Bool);
        public static readonly SimVar FlapSpeedExceeded = new SimVar("FLAP SPEED EXCEEDED", "Flap Speed Exceeded", SimVarType.Bool);
        public static readonly SimVar CenterWheelRpm = new SimVar("CENTER WHEEL RPM", "Center Analog9 Rpm", SimVarType.Rpm);
        public static readonly SimVar LeftWheelRpm = new SimVar("LEFT WHEEL RPM", "Left Analog9 Rpm", SimVarType.Rpm);
        public static readonly SimVar RightWheelRpm = new SimVar("RIGHT WHEEL RPM", "Right Analog9 Rpm", SimVarType.Rpm);
        public static readonly SimVar AutopilotAvailable = new SimVar("AUTOPILOT AVAILABLE", "Autopilot Available", SimVarType.Bool);
        public static readonly SimVar AutopilotMaster = new SimVar("AUTOPILOT MASTER", "Autopilot Master", SimVarType.Bool);
        public static readonly SimVar AutopilotNavSelected = new SimVar("AUTOPILOT NAV SELECTED", "Autopilot Nav Selected", SimVarType.Number);
        public static readonly SimVar AutopilotWingLeveler = new SimVar("AUTOPILOT WING LEVELER", "Autopilot Wing Leveler", SimVarType.Bool);
        public static readonly SimVar AutopilotNav1Lock = new SimVar("AUTOPILOT NAV1 LOCK", "Autopilot Nav1 Lock", SimVarType.Bool);
        public static readonly SimVar AutopilotHeadingLock = new SimVar("AUTOPILOT HEADING LOCK", "Autopilot Heading Lock", SimVarType.Bool);
        public static readonly SimVar AutopilotHeadingLockDir = new SimVar("AUTOPILOT HEADING LOCK DIR", "Autopilot Heading Lock Dir", SimVarType.Degrees);
        public static readonly SimVar AutopilotAltitudeLock = new SimVar("AUTOPILOT ALTITUDE LOCK", "Autopilot Altitude Lock", SimVarType.Bool);
        public static readonly SimVar AutopilotAltitudeLockVar = new SimVar("AUTOPILOT ALTITUDE LOCK VAR", "Autopilot Altitude Lock Var", SimVarType.Feet);
        public static readonly SimVar AutopilotAttitudeHold = new SimVar("AUTOPILOT ATTITUDE HOLD", "Autopilot Attitude Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotGlideslopeHold = new SimVar("AUTOPILOT GLIDESLOPE HOLD", "Autopilot Glideslope Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotPitchHoldRef = new SimVar("AUTOPILOT PITCH HOLD REF", "Autopilot Pitch Hold Ref", SimVarType.Radians);
        public static readonly SimVar AutopilotApproachHold = new SimVar("AUTOPILOT APPROACH HOLD", "Autopilot Approach Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotBackcourseHold = new SimVar("AUTOPILOT BACKCOURSE HOLD", "Autopilot Backcourse Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotVerticalHoldVar = new SimVar("AUTOPILOT VERTICAL HOLD VAR", "Autopilot Vertical Hold Var", SimVarType.Feetperminute);
        public static readonly SimVar AutopilotFlightDirectorActive = new SimVar("AUTOPILOT FLIGHT DIRECTOR ACTIVE", "Autopilot Flight Director Active", SimVarType.Bool);
        public static readonly SimVar AutopilotFlightDirectorPitch = new SimVar("AUTOPILOT FLIGHT DIRECTOR PITCH", "Autopilot Flight Director Pitch", SimVarType.Radians);
        public static readonly SimVar AutopilotFlightDirectorBank = new SimVar("AUTOPILOT FLIGHT DIRECTOR BANK", "Autopilot Flight Director Bank", SimVarType.Radians);
        public static readonly SimVar AutopilotAirspeedHold = new SimVar("AUTOPILOT AIRSPEED HOLD", "Autopilot Airspeed Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotAirspeedHoldVar = new SimVar("AUTOPILOT AIRSPEED HOLD VAR", "Autopilot Airspeed Hold Var", SimVarType.Knots);
        public static readonly SimVar AutopilotMachHold = new SimVar("AUTOPILOT MACH HOLD", "Autopilot Mach Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotMachHoldVar = new SimVar("AUTOPILOT MACH HOLD VAR", "Autopilot Mach Hold Var", SimVarType.Number);
        public static readonly SimVar AutopilotYawDamper = new SimVar("AUTOPILOT YAW DAMPER", "Autopilot Yaw Damper", SimVarType.Bool);
        public static readonly SimVar AutopilotRpmHoldVar = new SimVar("AUTOPILOT RPM HOLD VAR", "Autopilot Rpm Hold Var", SimVarType.Number);
        public static readonly SimVar AutopilotThrottleArm = new SimVar("AUTOPILOT THROTTLE ARM", "Autopilot Throttle Arm", SimVarType.Bool);
        public static readonly SimVar AutopilotTakeoffPowerActive = new SimVar("AUTOPILOT TAKEOFF POWER ACTIVE", "Autopilot Takeoff Power Active", SimVarType.Bool);
        public static readonly SimVar AutothrottleActive = new SimVar("AUTOTHROTTLE ACTIVE", "Autothrottle Active", SimVarType.Bool);
        public static readonly SimVar AutopilotVerticalHold = new SimVar("AUTOPILOT VERTICAL HOLD", "Autopilot Vertical Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotRpmHold = new SimVar("AUTOPILOT RPM HOLD", "Autopilot Rpm Hold", SimVarType.Bool);
        public static readonly SimVar AutopilotMaxBank = new SimVar("AUTOPILOT MAX BANK", "Autopilot Max Bank", SimVarType.Radians);
        public static readonly SimVar WheelRpm = new SimVar("WHEEL RPM", "Analog9 Rpm", SimVarType.Rpm);
        public static readonly SimVar AuxWheelRpm = new SimVar("AUX WHEEL RPM", "Aux Analog9 Rpm", SimVarType.Rpm);
        public static readonly SimVar WheelRotationAngle = new SimVar("WHEEL ROTATION ANGLE", "Analog9 Rotation Angle", SimVarType.Radians);
        public static readonly SimVar CenterWheelRotationAngle = new SimVar("CENTER WHEEL ROTATION ANGLE", "Center Analog9 Rotation Angle", SimVarType.Radians);
        public static readonly SimVar LeftWheelRotationAngle = new SimVar("LEFT WHEEL ROTATION ANGLE", "Left Analog9 Rotation Angle", SimVarType.Radians);
        public static readonly SimVar RightWheelRotationAngle = new SimVar("RIGHT WHEEL ROTATION ANGLE", "Right Analog9 Rotation Angle", SimVarType.Radians);
        public static readonly SimVar AuxWheelRotationAngle = new SimVar("AUX WHEEL ROTATION ANGLE", "Aux Analog9 Rotation Angle", SimVarType.Radians);
        public static readonly SimVar GearEmergencyHandlePosition = new SimVar("GEAR EMERGENCY HANDLE POSITION", "Gear Emergency Handle Position", SimVarType.Bool);
        public static readonly SimVar GearWarning = new SimVar("GEAR WARNING", "Gear Warning", SimVarType.Enum);
        public static readonly SimVar AntiskidBrakesActive = new SimVar("ANTISKID BRAKES ACTIVE", "Antiskid Brakes Active", SimVarType.Bool);
        public static readonly SimVar RetractFloatSwitch = new SimVar("RETRACT FLOAT SWITCH", "Retract Float Switch", SimVarType.Bool);
        public static readonly SimVar RetractLeftFloatExtended = new SimVar("RETRACT LEFT FLOAT EXTENDED", "Retract Left Float Extended", SimVarType.Percent);
        public static readonly SimVar RetractRightFloatExtended = new SimVar("RETRACT RIGHT FLOAT EXTENDED", "Retract Right Float Extended", SimVarType.Percent);
        public static readonly SimVar SteerInputControl = new SimVar("STEER INPUT CONTROL", "Steer Input Control", SimVarType.PercentOver100);
        public static readonly SimVar AmbientDensity = new SimVar("AMBIENT DENSITY", "Ambient Density", SimVarType.SlugsPerCubicFeet);
        public static readonly SimVar AmbientTemperature = new SimVar("AMBIENT TEMPERATURE", "Ambient Temperature", SimVarType.Celsius);
        public static readonly SimVar AmbientPressure = new SimVar("AMBIENT PRESSURE", "Ambient Pressure", SimVarType.Inhg);
        public static readonly SimVar AmbientWindVelocity = new SimVar("AMBIENT WIND VELOCITY", "Ambient Wind Velocity", SimVarType.Knots);
        public static readonly SimVar AmbientWindDirection = new SimVar("AMBIENT WIND DIRECTION", "Ambient Wind Direction", SimVarType.Degrees);
        public static readonly SimVar AmbientWindX = new SimVar("AMBIENT WIND Analog1", "Ambient Wind Analog1", SimVarType.MetersPerSecond);
        public static readonly SimVar AmbientWindY = new SimVar("AMBIENT WIND Analog2", "Ambient Wind Analog2", SimVarType.MetersPerSecond);
        public static readonly SimVar AmbientWindZ = new SimVar("AMBIENT WIND Analog3", "Ambient Wind Analog3", SimVarType.MetersPerSecond);
        public static readonly SimVar AmbientPrecipState = new SimVar("AMBIENT PRECIP STATE", "Ambient Precip State", SimVarType.Mask);
        public static readonly SimVar AircraftWindX = new SimVar("AIRCRAFT WIND Analog1", "Aircraft Wind Analog1", SimVarType.Knots);
        public static readonly SimVar AircraftWindY = new SimVar("AIRCRAFT WIND Analog2", "Aircraft Wind Analog2", SimVarType.Knots);
        public static readonly SimVar AircraftWindZ = new SimVar("AIRCRAFT WIND Analog3", "Aircraft Wind Analog3", SimVarType.Knots);
        public static readonly SimVar BarometerPressure = new SimVar("BAROMETER PRESSURE", "Barometer Pressure", SimVarType.Millibars);
        public static readonly SimVar SeaLevelPressure = new SimVar("SEA LEVEL PRESSURE", "Sea Level Pressure", SimVarType.Millibars);
        public static readonly SimVar TotalAirTemperature = new SimVar("TOTAL AIR TEMPERATURE", "Total Air Temperature", SimVarType.Celsius);
        public static readonly SimVar WindshieldRainEffectAvailable = new SimVar("WINDSHIELD RAIN EFFECT AVAILABLE", "Windshield Rain Effect Available", SimVarType.Bool);
        public static readonly SimVar AmbientInCloud = new SimVar("AMBIENT IN CLOUD", "Ambient In Cloud", SimVarType.Bool);
        public static readonly SimVar AmbientVisibility = new SimVar("AMBIENT VISIBILITY", "Ambient Visibility", SimVarType.Meters);
        public static readonly SimVar StandardAtmTemperature = new SimVar("STANDARD ATM TEMPERATURE", "Standard Atm Temperature", SimVarType.Rankine);
        public static readonly SimVar RotorBrakeHandlePos = new SimVar("ROTOR BRAKE HANDLE POS", "Rotor Brake Handle Pos", SimVarType.PercentOver100);
        public static readonly SimVar RotorBrakeActive = new SimVar("ROTOR BRAKE ACTIVE", "Rotor Brake Active", SimVarType.Bool);
        public static readonly SimVar RotorClutchSwitchPos = new SimVar("ROTOR CLUTCH SWITCH POS", "Rotor Clutch Switch Pos", SimVarType.Bool);
        public static readonly SimVar RotorClutchActive = new SimVar("ROTOR CLUTCH ACTIVE", "Rotor Clutch Active", SimVarType.Bool);
        public static readonly SimVar RotorTemperature = new SimVar("ROTOR TEMPERATURE", "Rotor Temperature", SimVarType.Rankine);
        public static readonly SimVar RotorChipDetected = new SimVar("ROTOR CHIP DETECTED", "Rotor Chip Detected", SimVarType.Bool);
        public static readonly SimVar RotorGovSwitchPos = new SimVar("ROTOR GOV SWITCH POS", "Rotor Gov Switch Pos", SimVarType.Bool);
        public static readonly SimVar RotorGovActive = new SimVar("ROTOR GOV ACTIVE", "Rotor Gov Active", SimVarType.Bool);
        public static readonly SimVar RotorLateralTrimPct = new SimVar("ROTOR LATERAL TRIM PCT", "Rotor Lateral Trim Pct", SimVarType.PercentOver100);
        public static readonly SimVar RotorRpmPct = new SimVar("ROTOR RPM PCT", "Rotor Rpm Pct", SimVarType.PercentOver100);
        public static readonly SimVar SmokeEnable = new SimVar("SMOKE ENABLE", "Smoke Enable", SimVarType.Bool);
        public static readonly SimVar SmokesystemAvailable = new SimVar("SMOKESYSTEM AVAILABLE", "Smokesystem Available", SimVarType.Bool);
        public static readonly SimVar PitotHeat = new SimVar("PITOT HEAT", "Pitot Heat", SimVarType.Bool);
        public static readonly SimVar FoldingWingLeftPercent = new SimVar("FOLDING WING LEFT PERCENT", "Folding Wing Left Percent", SimVarType.PercentOver100);
        public static readonly SimVar FoldingWingRightPercent = new SimVar("FOLDING WING RIGHT PERCENT", "Folding Wing Right Percent", SimVarType.PercentOver100);
        public static readonly SimVar CanopyOpen = new SimVar("CANOPY OPEN", "Canopy Open", SimVarType.PercentOver100);
        public static readonly SimVar TailhookPosition = new SimVar("TAILHOOK POSITION", "Tailhook Position", SimVarType.PercentOver100);
        public static readonly SimVar ExitOpenIndex = new SimVar("EXIT OPEN:index", "Exit Open Index", SimVarType.PercentOver100);
        public static readonly SimVar StallHornAvailable = new SimVar("STALL HORN AVAILABLE", "Stall Horn Available", SimVarType.Bool);
        public static readonly SimVar EngineMixureAvailable = new SimVar("ENGINE MIXURE AVAILABLE", "Engine Mixure Available", SimVarType.Bool);
        public static readonly SimVar CarbHeatAvailable = new SimVar("CARB HEAT AVAILABLE", "Carb Heat Available", SimVarType.Bool);
        public static readonly SimVar SpoilerAvailable = new SimVar("SPOILER AVAILABLE", "Spoiler Available", SimVarType.Bool);
        public static readonly SimVar IsTailDragger = new SimVar("IS TAIL DRAGGER", "Is Tail Dragger", SimVarType.Bool);
        public static readonly SimVar StrobesAvailable = new SimVar("STROBES AVAILABLE", "Strobes Available", SimVarType.Bool);
        public static readonly SimVar ToeBrakesAvailable = new SimVar("TOE BRAKES AVAILABLE", "Toe Brakes Available", SimVarType.Bool);
        public static readonly SimVar PushbackState = new SimVar("PUSHBACK STATE", "Pushback State", SimVarType.Enum);
        public static readonly SimVar ElectricalMasterBattery = new SimVar("ELECTRICAL MASTER BATTERY", "Electrical Master Battery", SimVarType.Bool);
        public static readonly SimVar ElectricalTotalLoadAmps = new SimVar("ELECTRICAL TOTAL LOAD AMPS", "Electrical Total Load Amps", SimVarType.Amperes);
        public static readonly SimVar ElectricalBatteryLoad = new SimVar("ELECTRICAL BATTERY LOAD", "Electrical Battery Load", SimVarType.Amperes);
        public static readonly SimVar ElectricalBatteryVoltage = new SimVar("ELECTRICAL BATTERY VOLTAGE", "Electrical Battery Voltage", SimVarType.Volts);
        public static readonly SimVar ElectricalMainBusVoltage = new SimVar("ELECTRICAL MAIN BUS VOLTAGE", "Electrical Main Bus Voltage", SimVarType.Volts);
        public static readonly SimVar ElectricalMainBusAmps = new SimVar("ELECTRICAL MAIN BUS AMPS", "Electrical Main Bus Amps", SimVarType.Amperes);
        public static readonly SimVar ElectricalAvionicsBusVoltage = new SimVar("ELECTRICAL AVIONICS BUS VOLTAGE", "Electrical Avionics Bus Voltage", SimVarType.Volts);
        public static readonly SimVar ElectricalAvionicsBusAmps = new SimVar("ELECTRICAL AVIONICS BUS AMPS", "Electrical Avionics Bus Amps", SimVarType.Amperes);
        public static readonly SimVar ElectricalHotBatteryBusVoltage = new SimVar("ELECTRICAL HOT BATTERY BUS VOLTAGE", "Electrical Hot Battery Bus Voltage", SimVarType.Volts);
        public static readonly SimVar ElectricalHotBatteryBusAmps = new SimVar("ELECTRICAL HOT BATTERY BUS AMPS", "Electrical Hot Battery Bus Amps", SimVarType.Amperes);
        public static readonly SimVar ElectricalBatteryBusVoltage = new SimVar("ELECTRICAL BATTERY BUS VOLTAGE", "Electrical Battery Bus Voltage", SimVarType.Volts);
        public static readonly SimVar ElectricalBatteryBusAmps = new SimVar("ELECTRICAL BATTERY BUS AMPS", "Electrical Battery Bus Amps", SimVarType.Amperes);
        public static readonly SimVar ElectricalGenaltBusVoltageIndex = new SimVar("ELECTRICAL GENALT BUS VOLTAGE:index", "Electrical Genalt Bus Voltage Index", SimVarType.Volts);
        public static readonly SimVar ElectricalGenaltBusAmpsIndex = new SimVar("ELECTRICAL GENALT BUS AMPS:index", "Electrical Genalt Bus Amps Index", SimVarType.Amperes);
        public static readonly SimVar CircuitGeneralPanelOn = new SimVar("CIRCUIT GENERAL PANEL ON", "Circuit General Panel On", SimVarType.Bool);
        public static readonly SimVar CircuitFlapMotorOn = new SimVar("CIRCUIT FLAP MOTOR ON", "Circuit Flap Motor On", SimVarType.Bool);
        public static readonly SimVar CircuitGearMotorOn = new SimVar("CIRCUIT GEAR MOTOR ON", "Circuit Gear Motor On", SimVarType.Bool);
        public static readonly SimVar CircuitAutopilotOn = new SimVar("CIRCUIT AUTOPILOT ON", "Circuit Autopilot On", SimVarType.Bool);
        public static readonly SimVar CircuitAvionicsOn = new SimVar("CIRCUIT AVIONICS ON", "Circuit Avionics On", SimVarType.Bool);
        public static readonly SimVar CircuitPitotHeatOn = new SimVar("CIRCUIT PITOT HEAT ON", "Circuit Pitot Heat On", SimVarType.Bool);
        public static readonly SimVar CircuitPropSyncOn = new SimVar("CIRCUIT PROP SYNC ON", "Circuit Prop Sync On", SimVarType.Bool);
        public static readonly SimVar CircuitAutoFeatherOn = new SimVar("CIRCUIT AUTO FEATHER ON", "Circuit Auto Feather On", SimVarType.Bool);
        public static readonly SimVar CircuitAutoBrakesOn = new SimVar("CIRCUIT AUTO BRAKES ON", "Circuit Auto Brakes On", SimVarType.Bool);
        public static readonly SimVar CircuitStandyVacuumOn = new SimVar("CIRCUIT STANDY VACUUM ON", "Circuit Standy Vacuum On", SimVarType.Bool);
        public static readonly SimVar CircuitMarkerBeaconOn = new SimVar("CIRCUIT MARKER BEACON ON", "Circuit Marker Beacon On", SimVarType.Bool);
        public static readonly SimVar CircuitGearWarningOn = new SimVar("CIRCUIT GEAR WARNING ON", "Circuit Gear Warning On", SimVarType.Bool);
        public static readonly SimVar CircuitHydraulicPumpOn = new SimVar("CIRCUIT HYDRAULIC PUMP ON", "Circuit Hydraulic Pump On", SimVarType.Bool);
        public static readonly SimVar HydraulicPressureIndex = new SimVar("HYDRAULIC PRESSURE:index", "Hydraulic Pressure Index", SimVarType.PoundForcePerSquareFoot);
        public static readonly SimVar HydraulicReservoirPercentIndex = new SimVar("HYDRAULIC RESERVOIR PERCENT:index", "Hydraulic Reservoir Percent Index", SimVarType.PercentOver100);
        public static readonly SimVar HydraulicSystemIntegrity = new SimVar("HYDRAULIC SYSTEM INTEGRITY", "Hydraulic System Integrity", SimVarType.PercentOver100);
        public static readonly SimVar StructuralDeiceSwitch = new SimVar("STRUCTURAL DEICE SWITCH", "Structural Deice Switch", SimVarType.Bool);
        public static readonly SimVar TotalWeight = new SimVar("TOTAL WEIGHT", "Total Weight", SimVarType.Pounds);
        public static readonly SimVar MaxGrossWeight = new SimVar("MAX GROSS WEIGHT", "Max Gross Weight", SimVarType.Pounds);
        public static readonly SimVar EmptyWeight = new SimVar("EMPTY WEIGHT", "Empty Weight", SimVarType.Pounds);
        public static readonly SimVar IsUserSim = new SimVar("IS USER SIM", "Is User Sim", SimVarType.Bool);
        public static readonly SimVar SimDisabled = new SimVar("SIM DISABLED", "Sim Disabled", SimVarType.Bool);
        public static readonly SimVar GForce = new SimVar("G FORCE", "G Force", SimVarType.Gforce);
        public static readonly SimVar AtcHeavy = new SimVar("ATC HEAVY", "Atc Heavy", SimVarType.Bool);
        public static readonly SimVar AutoCoordination = new SimVar("AUTO COORDINATION", "Auto Coordination", SimVarType.Bool);
        public static readonly SimVar Realism = new SimVar("REALISM", "Realism", SimVarType.Number);
        public static readonly SimVar TrueAirspeedSelected = new SimVar("TRUE AIRSPEED SELECTED", "True Airspeed Selected", SimVarType.Bool);
        public static readonly SimVar DesignSpeedVs0 = new SimVar("DESIGN SPEED VS0", "Design Speed Vs0", SimVarType.FeetPerSecond);
        public static readonly SimVar DesignSpeedVs1 = new SimVar("DESIGN SPEED VS1", "Design Speed Vs1", SimVarType.FeetPerSecond);
        public static readonly SimVar DesignSpeedVc = new SimVar("DESIGN SPEED VC", "Design Speed Vc", SimVarType.FeetPerSecond);
        public static readonly SimVar MinDragVelocity = new SimVar("MIN DRAG VELOCITY", "Min Drag Velocity", SimVarType.FeetPerSecond);
        public static readonly SimVar EstimatedCruiseSpeed = new SimVar("ESTIMATED CRUISE SPEED", "Estimated Cruise Speed", SimVarType.FeetPerSecond);
        public static readonly SimVar CgPercent = new SimVar("CG PERCENT", "Cg Percent", SimVarType.PercentOver100);
        public static readonly SimVar CgPercentLateral = new SimVar("CG PERCENT LATERAL", "Cg Percent Lateral", SimVarType.PercentOver100);
        public static readonly SimVar IsSlewActive = new SimVar("IS SLEW ACTIVE", "Is Slew Active", SimVarType.Bool);
        public static readonly SimVar IsSlewAllowed = new SimVar("IS SLEW ALLOWED", "Is Slew Allowed", SimVarType.Bool);
        public static readonly SimVar AtcSuggestedMinRwyTakeoff = new SimVar("ATC SUGGESTED MIN RWY TAKEOFF", "Atc Suggested Min Rwy Takeoff", SimVarType.Feet);
        public static readonly SimVar AtcSuggestedMinRwyLanding = new SimVar("ATC SUGGESTED MIN RWY LANDING", "Atc Suggested Min Rwy Landing", SimVarType.Feet);
        public static readonly SimVar PayloadStationWeightIndex = new SimVar("PAYLOAD STATION WEIGHT:index", "Payload Station Weight Index", SimVarType.Pounds);
        public static readonly SimVar PayloadStationCount = new SimVar("PAYLOAD STATION COUNT", "Payload Station Count", SimVarType.Number);
        public static readonly SimVar UserInputEnabled = new SimVar("USER INPUT ENABLED", "User Input Enabled", SimVarType.Bool);
        public static readonly SimVar TypicalDescentRate = new SimVar("TYPICAL DESCENT RATE", "Typical Descent Rate", SimVarType.FeetPerMinute);
        public static readonly SimVar VisualModelRadius = new SimVar("VISUAL MODEL RADIUS", "Visual Model Radius", SimVarType.Meters);
        public static readonly SimVar Category = new SimVar("CATEGORY", "Category", SimVarType.String);
        public static readonly SimVar SigmaSqrt = new SimVar("SIGMA SQRT", "Sigma Sqrt", SimVarType.Number);
        public static readonly SimVar DynamicPressure = new SimVar("DYNAMIC PRESSURE", "Dynamic Pressure", SimVarType.PoundsPerSquareFoot);
        public static readonly SimVar TotalVelocity = new SimVar("TOTAL VELOCITY", "Total Velocity", SimVarType.FeetPerSecond);
        public static readonly SimVar AirspeedSelectIndicatedOrTrue = new SimVar("AIRSPEED SELECT INDICATED OR TRUE", "Airspeed Select Indicated Or True", SimVarType.Knots);
        public static readonly SimVar VariometerRate = new SimVar("VARIOMETER RATE", "Variometer Rate", SimVarType.FeetPerSecond);
        public static readonly SimVar VariometerSwitch = new SimVar("VARIOMETER SWITCH", "Variometer Switch", SimVarType.Bool);
        public static readonly SimVar PressureAltitude = new SimVar("PRESSURE ALTITUDE", "Pressure Altitude", SimVarType.Meters);
        public static readonly SimVar MagneticCompass = new SimVar("MAGNETIC COMPASS", "Magnetic Compass", SimVarType.Degrees);
        public static readonly SimVar TurnIndicatorRate = new SimVar("TURN INDICATOR RATE", "Turn Indicator Rate", SimVarType.RadiansPerSecond);
        public static readonly SimVar TurnIndicatorSwitch = new SimVar("TURN INDICATOR SWITCH", "Turn Indicator Switch", SimVarType.Bool);
        public static readonly SimVar YokeYIndicator = new SimVar("YOKE Analog2 INDICATOR", "Yoke Analog2 Indicator", SimVarType.Position);
        public static readonly SimVar YokeXIndicator = new SimVar("YOKE Analog1 INDICATOR", "Yoke Analog1 Indicator", SimVarType.Position);
        public static readonly SimVar RudderPedalIndicator = new SimVar("RUDDER PEDAL INDICATOR", "Rudder Pedal Indicator", SimVarType.Position);
        public static readonly SimVar BrakeDependentHydraulicPressure = new SimVar("BRAKE DEPENDENT HYDRAULIC PRESSURE", "Brake Dependent Hydraulic Pressure", SimVarType.FootPound);
        public static readonly SimVar PanelAntiIceSwitch = new SimVar("PANEL ANTI ICE SWITCH", "Panel Anti Ice Switch", SimVarType.Bool);
        public static readonly SimVar WingArea = new SimVar("WING AREA", "Wing Area", SimVarType.SquareFeet);
        public static readonly SimVar WingSpan = new SimVar("WING SPAN", "Wing Span", SimVarType.Feet);
        public static readonly SimVar BetaDot = new SimVar("BETA DOT", "Beta Dot", SimVarType.RadiansPerSecond);
        public static readonly SimVar LinearClAlpha = new SimVar("LINEAR CL ALPHA", "Linear Cl Alpha", SimVarType.PerRadian);
        public static readonly SimVar StallAlpha = new SimVar("STALL ALPHA", "Stall Alpha", SimVarType.Radians);
        public static readonly SimVar ZeroLiftAlpha = new SimVar("ZERO LIFT ALPHA", "Zero Lift Alpha", SimVarType.Radians);
        public static readonly SimVar CgAftLimit = new SimVar("CG AFT LIMIT", "Cg Aft Limit", SimVarType.PercentOver100);
        public static readonly SimVar CgFwdLimit = new SimVar("CG FWD LIMIT", "Cg Fwd Limit", SimVarType.PercentOver100);
        public static readonly SimVar CgMaxMach = new SimVar("CG MAX MACH", "Cg Max Mach", SimVarType.Machs);
        public static readonly SimVar CgMinMach = new SimVar("CG MIN MACH", "Cg Min Mach", SimVarType.Machs);
        public static readonly SimVar PayloadStationName = new SimVar("PAYLOAD STATION NAME", "Payload Station Name", SimVarType.String);
        public static readonly SimVar ElevonDeflection = new SimVar("ELEVON DEFLECTION", "Elevon Deflection", SimVarType.Radians);
        public static readonly SimVar ExitType = new SimVar("EXIT TYPE", "Exit Type", SimVarType.Enum);
        public static readonly SimVar ExitPosx = new SimVar("EXIT POSX", "Exit Posx", SimVarType.Feet);
        public static readonly SimVar ExitPosy = new SimVar("EXIT POSY", "Exit Posy", SimVarType.Feet);
        public static readonly SimVar ExitPosz = new SimVar("EXIT POSZ", "Exit Posz", SimVarType.Feet);
        public static readonly SimVar DecisionHeight = new SimVar("DECISION HEIGHT", "Decision Height", SimVarType.Feet);
        public static readonly SimVar DecisionAltitudeMsl = new SimVar("DECISION ALTITUDE MSL", "Decision Altitude Msl", SimVarType.Feet);
        public static readonly SimVar EmptyWeightPitchMoi = new SimVar("EMPTY WEIGHT PITCH MOI", "Empty Weight Pitch Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar EmptyWeightRollMoi = new SimVar("EMPTY WEIGHT ROLL MOI", "Empty Weight Roll Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar EmptyWeightYawMoi = new SimVar("EMPTY WEIGHT YAW MOI", "Empty Weight Yaw Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar EmptyWeightCrossCoupledMoi = new SimVar("EMPTY WEIGHT CROSS COUPLED MOI", "Empty Weight Cross Coupled Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar TotalWeightPitchMoi = new SimVar("TOTAL WEIGHT PITCH MOI", "Total Weight Pitch Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar TotalWeightRollMoi = new SimVar("TOTAL WEIGHT ROLL MOI", "Total Weight Roll Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar TotalWeightYawMoi = new SimVar("TOTAL WEIGHT YAW MOI", "Total Weight Yaw Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar TotalWeightCrossCoupledMoi = new SimVar("TOTAL WEIGHT CROSS COUPLED MOI", "Total Weight Cross Coupled Moi", SimVarType.SlugFeetSquared);
        public static readonly SimVar WaterBallastValve = new SimVar("WATER BALLAST VALVE", "Water Ballast Valve", SimVarType.Bool);
        public static readonly SimVar MaxRatedEngineRpm = new SimVar("MAX RATED ENGINE RPM", "Max Rated Engine Rpm", SimVarType.Rpm);
        public static readonly SimVar FullThrottleThrustToWeightRatio = new SimVar("FULL THROTTLE THRUST TO WEIGHT RATIO", "Full Throttle Thrust To Weight Ratio", SimVarType.Number);
        public static readonly SimVar PropAutoCruiseActive = new SimVar("PROP AUTO CRUISE ACTIVE", "Prop Auto Cruise Active", SimVarType.Bool);
        public static readonly SimVar PropRotationAngle = new SimVar("PROP ROTATION ANGLE", "Prop Rotation Angle", SimVarType.Radians);
        public static readonly SimVar PropBetaMax = new SimVar("PROP BETA MAX", "Prop Beta Max", SimVarType.Radians);
        public static readonly SimVar PropBetaMin = new SimVar("PROP BETA MIN", "Prop Beta Min", SimVarType.Radians);
        public static readonly SimVar PropBetaMinReverse = new SimVar("PROP BETA MIN REVERSE", "Prop Beta Min Reverse", SimVarType.Radians);
        public static readonly SimVar FuelSelectedTransferMode = new SimVar("FUEL SELECTED TRANSFER MODE", "Fuel Selected Transfer Mode", SimVarType.Enum);
        public static readonly SimVar DroppableObjectsUiName = new SimVar("DROPPABLE OBJECTS UI NAME", "Droppable Objects Ui Name", SimVarType.String);
        public static readonly SimVar ManualFuelPumpHandle = new SimVar("MANUAL FUEL PUMP HANDLE", "Manual Fuel Pump Handle", SimVarType.PercentOver100);
        public static readonly SimVar BleedAirSourceControl = new SimVar("BLEED AIR SOURCE CONTROL", "Bleed Air Source Control", SimVarType.Enum);
        public static readonly SimVar ElectricalOldChargingAmps = new SimVar("ELECTRICAL OLD CHARGING AMPS", "Electrical Old Charging Amps", SimVarType.Amps);
        public static readonly SimVar HydraulicSwitch = new SimVar("HYDRAULIC SWITCH", "Hydraulic Switch", SimVarType.Bool);
        public static readonly SimVar ConcordeVisorNoseHandle = new SimVar("CONCORDE VISOR NOSE HANDLE", "Concorde Visor Nose Handle", SimVarType.Enum);
        public static readonly SimVar ConcordeVisorPositionPercent = new SimVar("CONCORDE VISOR POSITION PERCENT", "Concorde Visor Position Percent", SimVarType.PercentOver100);
        public static readonly SimVar ConcordeNoseAngle = new SimVar("CONCORDE NOSE ANGLE", "Concorde Nose Angle", SimVarType.Radians);
        public static readonly SimVar RealismCrashWithOthers = new SimVar("REALISM CRASH WITH OTHERS", "Realism Crash With Others", SimVarType.Bool);
        public static readonly SimVar RealismCrashDetection = new SimVar("REALISM CRASH DETECTION", "Realism Crash Detection", SimVarType.Bool);
        public static readonly SimVar ManualInstrumentLights = new SimVar("MANUAL INSTRUMENT LIGHTS", "Manual Instrument Lights", SimVarType.Bool);
        public static readonly SimVar PitotIcePct = new SimVar("PITOT ICE PCT", "Pitot Ice Pct", SimVarType.PercentOver100);
        public static readonly SimVar SemibodyLoadfactorY = new SimVar("SEMIBODY LOADFACTOR Analog2", "Semibody Loadfactor Analog2", SimVarType.Number);
        public static readonly SimVar SemibodyLoadfactorYdot = new SimVar("SEMIBODY LOADFACTOR YDOT", "Semibody Loadfactor Ydot", SimVarType.PerSecond);
        public static readonly SimVar RadInsSwitch = new SimVar("RAD INS SWITCH", "Rad Ins Switch", SimVarType.Bool);
        public static readonly SimVar SimulatedRadius = new SimVar("SIMULATED RADIUS", "Simulated Radius", SimVarType.Feet);
        public static readonly SimVar StructuralIcePct = new SimVar("STRUCTURAL ICE PCT", "Structural Ice Pct", SimVarType.PercentOver100);
        public static readonly SimVar ArtificialGroundElevation = new SimVar("ARTIFICIAL GROUND ELEVATION", "Artificial Ground Elevation", SimVarType.Feet);
        public static readonly SimVar SurfaceInfoValid = new SimVar("SURFACE INFO VALID", "Surface Info Valid", SimVarType.Bool);
        public static readonly SimVar SurfaceCondition = new SimVar("SURFACE CONDITION", "Surface Condition", SimVarType.Enum);
        public static readonly SimVar PushbackAngle = new SimVar("PUSHBACK ANGLE", "Pushback Angle", SimVarType.Radians);
        public static readonly SimVar PushbackContactx = new SimVar("PUSHBACK CONTACTX", "Pushback Contactx", SimVarType.Feet);
        public static readonly SimVar PushbackContacty = new SimVar("PUSHBACK CONTACTY", "Pushback Contacty", SimVarType.Feet);
        public static readonly SimVar PushbackContactz = new SimVar("PUSHBACK CONTACTZ", "Pushback Contactz", SimVarType.Feet);
        public static readonly SimVar PushbackWait = new SimVar("PUSHBACK WAIT", "Pushback Wait", SimVarType.Bool);
        public static readonly SimVar YawStringAngle = new SimVar("YAW STRING ANGLE", "Yaw String Angle", SimVarType.Radians);
        public static readonly SimVar YawStringPctExtended = new SimVar("YAW STRING PCT EXTENDED", "Yaw String Pct Extended", SimVarType.PercentOver100);
        public static readonly SimVar InductorCompassPercentDeviation = new SimVar("INDUCTOR COMPASS PERCENT DEVIATION", "Inductor Compass Percent Deviation", SimVarType.PercentOver100);
        public static readonly SimVar InductorCompassHeadingRef = new SimVar("INDUCTOR COMPASS HEADING REF", "Inductor Compass Heading Ref", SimVarType.Radians);
        public static readonly SimVar AnemometerPctRpm = new SimVar("ANEMOMETER PCT RPM", "Anemometer Pct Rpm", SimVarType.PercentOver100);
        public static readonly SimVar RotorRotationAngle = new SimVar("ROTOR ROTATION ANGLE", "Rotor Rotation Angle", SimVarType.Radians);
        public static readonly SimVar DiskPitchAngle = new SimVar("DISK PITCH ANGLE", "Disk Pitch Angle", SimVarType.Radians);
        public static readonly SimVar DiskBankAngle = new SimVar("DISK BANK ANGLE", "Disk Bank Angle", SimVarType.Radians);
        public static readonly SimVar DiskPitchPct = new SimVar("DISK PITCH PCT", "Disk Pitch Pct", SimVarType.PercentOver100);
        public static readonly SimVar DiskBankPct = new SimVar("DISK BANK PCT", "Disk Bank Pct", SimVarType.PercentOver100);
        public static readonly SimVar DiskConingPct = new SimVar("DISK CONING PCT", "Disk Coning Pct", SimVarType.PercentOver100);
        public static readonly SimVar NavVorLlaf64 = new SimVar("NAV VOR LLAF64", "Nav Vor Llaf64", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar NavGsLlaf64 = new SimVar("NAV GS LLAF64", "Nav Gs Llaf64", SimVarType.SimconnectDataLatlonalt);
        public static readonly SimVar StaticCgToGround = new SimVar("STATIC CG TO GROUND", "Static Cg To Ground", SimVarType.Feet);
        public static readonly SimVar StaticPitch = new SimVar("STATIC PITCH", "Static Pitch", SimVarType.Radians);
        public static readonly SimVar CrashSequence = new SimVar("CRASH SEQUENCE", "Crash Sequence", SimVarType.Enum);
        public static readonly SimVar CrashFlag = new SimVar("CRASH FLAG", "Crash Flag", SimVarType.Enum);
        public static readonly SimVar TowReleaseHandle = new SimVar("TOW RELEASE HANDLE", "Tow Release Handle", SimVarType.PercentOver100);
        public static readonly SimVar TowConnection = new SimVar("TOW CONNECTION", "Tow Connection", SimVarType.Bool);
        public static readonly SimVar ApuPctRpm = new SimVar("APU PCT RPM", "Apu Pct Rpm", SimVarType.PercentOver100);
        public static readonly SimVar ApuPctStarter = new SimVar("APU PCT STARTER", "Apu Pct Starter", SimVarType.PercentOver100);
        public static readonly SimVar ApuVolts = new SimVar("APU VOLTS", "Apu Volts", SimVarType.Volts);
        public static readonly SimVar ApuGeneratorSwitch = new SimVar("APU GENERATOR SWITCH", "Apu Generator Switch", SimVarType.Bool);
        public static readonly SimVar ApuGeneratorActive = new SimVar("APU GENERATOR ACTIVE", "Apu Generator Active", SimVarType.Bool);
        public static readonly SimVar ApuOnFireDetected = new SimVar("APU ON FIRE DETECTED", "Apu On Fire Detected", SimVarType.Bool);
        public static readonly SimVar PressurizationCabinAltitude = new SimVar("PRESSURIZATION CABIN ALTITUDE", "Pressurization Cabin Altitude", SimVarType.Feet);
        public static readonly SimVar PressurizationCabinAltitudeGoal = new SimVar("PRESSURIZATION CABIN ALTITUDE GOAL", "Pressurization Cabin Altitude Goal", SimVarType.Feet);
        public static readonly SimVar PressurizationCabinAltitudeRate = new SimVar("PRESSURIZATION CABIN ALTITUDE RATE", "Pressurization Cabin Altitude Rate", SimVarType.FeetPerSecond);
        public static readonly SimVar PressurizationPressureDifferential = new SimVar("PRESSURIZATION PRESSURE DIFFERENTIAL", "Pressurization Pressure Differential", SimVarType.FootPound);
        public static readonly SimVar PressurizationDumpSwitch = new SimVar("PRESSURIZATION DUMP SWITCH", "Pressurization Dump Switch", SimVarType.Bool);
        public static readonly SimVar FireBottleSwitch = new SimVar("FIRE BOTTLE SWITCH", "Fire Bottle Switch", SimVarType.Bool);
        public static readonly SimVar FireBottleDischarged = new SimVar("FIRE BOTTLE DISCHARGED", "Fire Bottle Discharged", SimVarType.Bool);
        public static readonly SimVar CabinNoSmokingAlertSwitch = new SimVar("CABIN NO SMOKING ALERT SWITCH", "Cabin No Smoking Alert Switch", SimVarType.Bool);
        public static readonly SimVar CabinSeatbeltsAlertSwitch = new SimVar("CABIN SEATBELTS ALERT SWITCH", "Cabin Seatbelts Alert Switch", SimVarType.Bool);
        public static readonly SimVar GpwsWarning = new SimVar("GPWS WARNING", "Gpws Warning", SimVarType.Bool);
        public static readonly SimVar GpwsSystemActive = new SimVar("GPWS SYSTEM ACTIVE", "Gpws System Active", SimVarType.Bool);
        public static readonly SimVar IsLatitudeLongitudeFreezeOn = new SimVar("IS LATITUDE LONGITUDE FREEZE ON", "Is Latitude Longitude Freeze On", SimVarType.Bool);
        public static readonly SimVar IsAltitudeFreezeOn = new SimVar("IS ALTITUDE FREEZE ON", "Is Altitude Freeze On", SimVarType.Bool);
        public static readonly SimVar IsAttitudeFreezeOn = new SimVar("IS ATTITUDE FREEZE ON", "Is Attitude Freeze On", SimVarType.Bool);
        public static readonly SimVar AtcType = new SimVar("ATC TYPE", "Atc Type", SimVarType.String64);
        public static readonly SimVar AtcModel = new SimVar("ATC MODEL", "Atc Model", SimVarType.String64);
        public static readonly SimVar AtcId = new SimVar("ATC ID", "Atc Id", SimVarType.String64);
        public static readonly SimVar AtcAirline = new SimVar("ATC AIRLINE", "Atc Airline", SimVarType.String64);
        public static readonly SimVar AtcFlightNumber = new SimVar("ATC FLIGHT NUMBER", "Atc Flight Number", SimVarType.String8);
        public static readonly SimVar Title = new SimVar("TITLE", "Title", SimVarType.VariableLengthString);
        public static readonly SimVar HsiStationIdent = new SimVar("HSI STATION IDENT", "Hsi Station Ident", SimVarType.String8);
        public static readonly SimVar GpsApproachAirportId = new SimVar("GPS APPROACH AIRPORT ID", "Gps Approach Airport Id", SimVarType.String);
        public static readonly SimVar GpsApproachApproachId = new SimVar("GPS APPROACH APPROACH ID", "Gps Approach Approach Id", SimVarType.String);
        public static readonly SimVar GpsApproachTransitionId = new SimVar("GPS APPROACH TRANSITION ID", "Gps Approach Transition Id", SimVarType.String);
        public static readonly SimVar AbsoluteTime = new SimVar("ABSOLUTE TIME", "Absolute Time", SimVarType.Seconds);
        public static readonly SimVar ZuluTime = new SimVar("ZULU TIME", "Zulu Time", SimVarType.Seconds);
        public static readonly SimVar ZuluDayOfWeek = new SimVar("ZULU DAY OF WEEK", "Zulu Day Of Week", SimVarType.Number);
        public static readonly SimVar ZuluDayOfMonth = new SimVar("ZULU DAY OF MONTH", "Zulu Day Of Month", SimVarType.Number);
        public static readonly SimVar ZuluMonthOfYear = new SimVar("ZULU MONTH OF YEAR", "Zulu Month Of Year", SimVarType.Number);
        public static readonly SimVar ZuluDayOfYear = new SimVar("ZULU DAY OF YEAR", "Zulu Day Of Year", SimVarType.Number);
        public static readonly SimVar ZuluYear = new SimVar("ZULU YEAR", "Zulu Year", SimVarType.Number);
        public static readonly SimVar LocalTime = new SimVar("LOCAL TIME", "Local Time", SimVarType.Seconds);
        public static readonly SimVar LocalDayOfWeek = new SimVar("LOCAL DAY OF WEEK", "Local Day Of Week", SimVarType.Number);
        public static readonly SimVar LocalDayOfMonth = new SimVar("LOCAL DAY OF MONTH", "Local Day Of Month", SimVarType.Number);
        public static readonly SimVar LocalMonthOfYear = new SimVar("LOCAL MONTH OF YEAR", "Local Month Of Year", SimVarType.Number);
        public static readonly SimVar LocalDayOfYear = new SimVar("LOCAL DAY OF YEAR", "Local Day Of Year", SimVarType.Number);
        public static readonly SimVar LocalYear = new SimVar("LOCAL YEAR", "Local Year", SimVarType.Number);
        public static readonly SimVar TimeZoneOffset = new SimVar("TIME ZONE OFFSET", "Time Zone Offset", SimVarType.Seconds);
        public static readonly SimVar TimeOfDay = new SimVar("TIME OF DAY", "Time Of Day", SimVarType.Enum);
        public static readonly SimVar SimulationRate = new SimVar("SIMULATION RATE", "Simulation Rate", SimVarType.Number);
        public static readonly SimVar UnitsOfMeasure = new SimVar("UNITS OF MEASURE", "Units Of Measure", SimVarType.Enum);

        public static IReadOnlyCollection<SimVar> All => _simVars;

        public string Name { get; }
        public string FriendlyName { get; }
        public SimVarType Type { get; }
        public Numbers Number { get; }

        private SimVar(string name, string friendlyName, SimVarType type)
        {
            Name = name;
            FriendlyName = friendlyName;
            Type = type;
            Number = Numbers.N16;// (Numbers) _simVars.Count;

            _simVars.Add(this);
        }
    }
}